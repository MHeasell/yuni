<title>Loop</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2><code>Loop</code></h2><table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Events triggered by the public interface of the event loop (from any thread) <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The event loop has just started.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">onStart</a></span>: <span class="keyword">static</span> bool ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The event loop has just stopped.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">onStop</a></span>: <span class="keyword">static</span> bool ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">A new request has just been added into the queue.<div class="doxygen_name_spacer"></div>
<code><div id="onRequestPosted_4481319137232_templ" style="display:none"><span class="keyword">template</span>&lt;class U &gt;</div>
 <span class="method"><a href="#">onRequestPosted</a></span>: <span class="keyword">static</span> bool (const U&amp; request);
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Events triggered from the main thread of the event loop <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The event loop has started a new cycle.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">onNewCycle</a></span>: bool ();
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Operators <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The operator += : Dispatch a new request.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">operator+=</a></span>: IEventLoop&amp; (const RequestType&amp; request);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The operator &lt;&lt; : Dispatch a new request.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">operator&lt;&lt;</a></span>: IEventLoop&amp; (const RequestType&amp; request);
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Events triggered by the public interface of the event loop (from any thread) <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The event loop has just started.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">onStart</a></span>: <span class="keyword">static</span> void ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The event loop has just stopped.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">onStop</a></span>: <span class="keyword">static</span> void ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">A new request has just been added into the queue.<div class="doxygen_name_spacer"></div>
<code><div id="onRequestPosted_4541319137232_templ" style="display:none"><span class="keyword">template</span>&lt;class U &gt;</div>
 <span class="method"><a href="#">onRequestPosted</a></span>: <span class="keyword">static</span> void (const U&amp; request);
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Events triggered from the main thread of the event loop <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The event loop has started a new cycle.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">onNewCycle</a></span>: <span class="keyword">static</span> void ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The event loop is processing a request.<div class="doxygen_name_spacer"></div>
<code><div id="onProcessRequest_4561319137232_templ" style="display:none"><span class="keyword">template</span>&lt;class U &gt;</div>
 <span class="method"><a href="#">onProcessRequest</a></span>: <span class="keyword">static</span> void (const U&amp; request);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The event loop has just finished a cycle.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">onEndOfCycle</a></span>: <span class="keyword">static</span> void ();
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The loop itself.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">LoopType</a></span>: <span class="keyword">typedef</span> Core::EventLoop::IEventLoop&lt;Loop, Core::EventLoop::Flow::Timer, Core::EventLoop::Statistics::None, true&gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">A request.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">RequestType</a></span>: <span class="keyword">typedef</span> LoopType::RequestType;</code>
</td></tr>
<tr><td></td><td class="doxnone"><code><i>(unmanaged tag: 0)</i></code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Parent.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">ParentType</a></span>: <span class="keyword">typedef</span> Loop;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">List of requests.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">RequestListType</a></span>: <span class="keyword">typedef</span> LinkedList&lt;RequestType&gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The Event loop.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">EventLoopType</a></span>: <span class="keyword">typedef</span> IEventLoop&lt; ParentType, Core::EventLoop::Flow::Timer, Core::EventLoop::Statistics::None, DetachedT&gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The most suitable smart pointer for the class.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">Ptr</a></span>: <span class="keyword">typedef</span> SmartPtr&lt;EventLoopType&gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The threading policy.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">ThreadingPolicy</a></span>: <span class="keyword">typedef</span> Policy::ObjectLevelLockableNotRecursive&lt;EventLoopType&gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The thread used for the inner loop.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">ThreadType</a></span>: <span class="keyword">typedef</span> Yuni::Private::Core::EventLoop::Thread&lt; EventLoopType&gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The flow policy.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">FlowPolicy</a></span>: <span class="keyword">typedef</span> Core::EventLoop::Flow::Timer&lt;EventLoopType&gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The statistics policy.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">StatisticsPolicy</a></span>: <span class="keyword">typedef</span> Core::EventLoop::Statistics::None&lt;EventLoopType&gt;;</code>
</td></tr>
<tr><td></td><td class="doxnone">Get if this policy is thread-safe.<div class="doxygen_name_spacer"></div>
<code><i>(unmanaged tag: 0)</i></code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_var"></td><td class="doxnone">Audio queue service corresponding to this loop.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">pAudioService</a></span>: QueueService*;</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Constructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">Loop</a></span>:  (QueueService* audioService);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Redefinition of the onLoop() callback.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">onLoop</a></span>: bool ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Start the event loop.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">start</a></span>: void ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Gracefully stop the execution of the event loop, and wait for it.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">stop</a></span>: void (unsigned int timeout);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Post a new request into the queue.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">dispatch</a></span>: void (const RequestType&amp; request);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Set the timeout to wait between each cycle.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">timeout</a></span>: void (unsigned int t);
</code>
</td></tr>
</table>


