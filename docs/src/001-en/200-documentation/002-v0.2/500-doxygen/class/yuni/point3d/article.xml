<title>Point3D</title>
<pragma:weight value="0.5" />
<tag name="doxygen" />
<tag name="class" />



<h2>Summary of the class <code>Point3D</code></h2><table class="nostyle">
<tr><td><div class="visibility">Public</div></td>
<td><h3 class="h3noleftspace">Constructors</h3>
<p class="doxygen_fun">Default constructor.<br />
<code> <span class="method"><a href="#">Point3D</a></span>();</code></p>
<p class="doxygen_fun">Constructor.<br />
<code><span class="keyword">template</span>&lt;typename U , typename V &gt;<br /> <span class="method"><a href="#">Point3D</a></span>(const U x1, const V y1);</code></p>
<p class="doxygen_fun">Constructor.<br />
<code><span class="keyword">template</span>&lt;typename U , typename V , typename W &gt;<br /> <span class="method"><a href="#">Point3D</a></span>(const U x1, const V y1, const W z1);</code></p>
<p class="doxygen_fun">Constructor by copy.<br />
<code><span class="keyword">template</span>&lt;typename U &gt;<br /> <span class="method"><a href="#">Point3D</a></span>(const Point3D &lt; U &gt;<b>&amp;</b> p);</code></p>
</td></tr>
<tr><td><div class="visibility">Public</div></td>
<td><h3 class="h3noleftspace">Operators</h3>
<p class="doxygen_var">X coordinate.<br />
<code>T <span class="method"><a href="#">x</a></span>;</code></p>
<p class="doxygen_var">Y coordinate.<br />
<code>T <span class="method"><a href="#">y</a></span>;</code></p>
<p class="doxygen_var">Z coordinate.<br />
<code>T <span class="method"><a href="#">z</a></span>;</code></p>
<p class="doxygen_fun">Reset all coordinates.<br />
<code><span class="keyword">template</span>&lt;typename U , typename V , typename W &gt;<br />void <span class="method"><a href="#">operator()</a></span>(const U x1, const V y1, const W z1);</code></p>
<p class="doxygen_fun">Copy all coordinates from another point.<br />
<code><span class="keyword">template</span>&lt;typename U &gt;<br />void <span class="method"><a href="#">operator()</a></span>(const Point3D &lt; U &gt;<b>&amp;</b> p);</code></p>
<p class="doxygen_fun">Translate the point with the same value for all coordinates.<br />
<code><span class="keyword">template</span>&lt;typename U &gt;<br />Point3D &lt; T &gt; &amp; <span class="method"><a href="#">operator+=</a></span>(const U k);</code></p>
<p class="doxygen_fun">Translate the point with relative coordinates.<br />
<code><span class="keyword">template</span>&lt;typename U &gt;<br />Point3D &lt; T &gt; &amp; <span class="method"><a href="#">operator+=</a></span>(const Point3D &lt; U &gt;<b>&amp;</b> p);</code></p>
<p class="doxygen_fun">Comparison operator (equal with)<br />
<code><span class="keyword">template</span>&lt;typename U &gt;<br />bool <span class="method"><a href="#">operator==</a></span>(const Point3D &lt; U &gt;<b>&amp;</b> rhs) <span class="keyword">const</span>;</code></p>
<p class="doxygen_fun">Comparison operator (non equal with)<br />
<code><span class="keyword">template</span>&lt;typename U &gt;<br />bool <span class="method"><a href="#">operator!=</a></span>(const Point3D &lt; U &gt;<b>&amp;</b> rhs) <span class="keyword">const</span>;</code></p>
<p class="doxygen_fun">Assign new values for all coordinates from another point.<br />
<code><span class="keyword">template</span>&lt;typename U &gt;<br />Point3D &amp; <span class="method"><a href="#">operator=</a></span>(const Point3D<b>&amp;</b> p);</code></p>
<p class="doxygen_fun">Assign new values for all coordinates from another point.<br />
<code><span class="keyword">template</span>&lt;typename U &gt;<br />Point3D &lt; T &gt; &amp; <span class="method"><a href="#">operator=</a></span>(const Point3D &lt; U &gt;<b>&amp;</b> p);</code></p>
<p class="doxygen_fun">Print the point.<br />
<code><span class="keyword">template</span>&lt;class StreamT &gt;<br />StreamT &amp; <span class="method"><a href="#">print</a></span>(StreamT<b>&amp;</b> out) <span class="keyword">const</span>;</code></p>
</td></tr>
<tr><td><div class="visibility">Public
</div></td>
<td><h3 class="h3noleftspace">Public
</h3>
<p class="doxygen_fun">Calculate the mean between two points.<br />
<code><span class="keyword">template</span>&lt;typename U , typename V &gt;<br /><span class="keyword">static</span> Point3D &lt; T &gt; &amp; <span class="method"><a href="#">Mean</a></span>(const Point3D &lt; U &gt;<b>&amp;</b> p1, const Point3D &lt; V &gt;<b>&amp;</b> p2);</code></p>
</td></tr>
<tr><td><div class="visibility">Public
</div></td>
<td><h3 class="h3noleftspace">Public
</h3>
<p class="doxygen_fun">Reset the point to origin.<br />
<code>Point3D &lt; T &gt; &amp; <span class="method"><a href="#">reset</a></span>();</code></p>
<p class="doxygen_fun">Move the point to new coordinates.<br />
<code><span class="keyword">template</span>&lt;typename U , typename V , typename W &gt;<br />void <span class="method"><a href="#">move</a></span>(const U x1, const V y1, const W z1);</code></p>
<p class="doxygen_fun">Move the point to new coordinates.<br />
<code><span class="keyword">template</span>&lt;typename U &gt;<br />void <span class="method"><a href="#">move</a></span>(const Point3D &lt; U &gt;<b>&amp;</b> p);</code></p>
<p class="doxygen_fun">Translate the point with the same value for all coordinates.<br />
<code><span class="keyword">template</span>&lt;typename U &gt;<br />void <span class="method"><a href="#">translate</a></span>(const U k);</code></p>
<p class="doxygen_fun">Translate the point with relative coordinates.<br />
<code><span class="keyword">template</span>&lt;typename U , typename V , typename W &gt;<br />void <span class="method"><a href="#">translate</a></span>(const U x1, const V y1, const W z1);</code></p>
<p class="doxygen_fun">Translate the point with relative coordinates from another Point.<br />
<code><span class="keyword">template</span>&lt;typename U &gt;<br />void <span class="method"><a href="#">translate</a></span>(const Point3D &lt; U &gt;<b>&amp;</b> p);</code></p>
<p class="doxygen_fun">Calculate the mean between two points The calling object is modified to store the value.<br />
<code><span class="keyword">template</span>&lt;typename U &gt;<br />void <span class="method"><a href="#">mean</a></span>(const Point3D &lt; U &gt;<b>&amp;</b> p);</code></p>
<p class="doxygen_fun">Calculate the mean between two points.<br />
<code><span class="keyword">template</span>&lt;typename U , typename V &gt;<br />Point3D &lt; T &gt; &amp; <span class="method"><a href="#">mean</a></span>(const Point3D &lt; U &gt;<b>&amp;</b> p1, const Point3D &lt; V &gt;<b>&amp;</b> p2);</code></p>
<p class="doxygen_fun">Get if the point is close to another point.<br />
<code><span class="keyword">template</span>&lt;typename U , typename V &gt;<br />bool <span class="method"><a href="#">closeTo</a></span>(const Point3D &lt; U &gt;<b>&amp;</b> rhs, const V delta) <span class="keyword">const</span>;</code></p>
<p class="doxygen_fun">Get if the point is close to another point.<br />
<code><span class="keyword">template</span>&lt;typename U , typename V , typename W , typename D &gt;<br />bool <span class="method"><a href="#">closeTo</a></span>(const U x1, const V y1, const W z1, const D delta) <span class="keyword">const</span>;</code></p>
</td></tr>
</table>


<h2>Detailed Description</h2>
