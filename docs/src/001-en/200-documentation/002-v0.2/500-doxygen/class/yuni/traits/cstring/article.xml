<title>CString</title>
<pragma:weight value="0.5" />
<tag name="doxygen" />
<tag name="class" />



<h2>Summary of the class <code>CString</code></h2><table class="nostyle">
<tr><td><div class="visibility">Public
</div></td>
<td><h3 class="h3noleftspace">Public
</h3>
<p>A non-zero value if the specialization is valid. A non-zero value if the data have been converted. A non-zero value if the data is zero-terminated.<br />
<code><i>(unmanaged tag)</i></code></p>
<p class="doxygen_typedef">The original type without its const qualifier.<br />
<code><span class="keyword">typedef</span> Static::Remove::Const &lt; U &gt;:: Type <span class="method"><a href="#">Type</a></span>;</code></p>
<p class="doxygen_typedef">Extension .<br />
<code><span class="keyword">typedef</span> Extension::IntoCString &lt; Type &gt; <span class="method"><a href="#">ExtensionType</a></span>;</code></p>
</td></tr>
<tr><td><div class="visibility">Public
</div></td>
<td><h3 class="h3noleftspace">Public
</h3>
<p class="doxygen_fun">Get a C-String representation of an arbitrary contrainer.<br />
<code><span class="keyword">template</span>&lt;class T &gt;<br /><span class="keyword">static</span> const char * <span class="method"><a href="#">Perform</a></span>(const T<b>&amp;</b> t); [inline]</code></p>
</td></tr>
</table>


<h2>Detailed Description</h2>
