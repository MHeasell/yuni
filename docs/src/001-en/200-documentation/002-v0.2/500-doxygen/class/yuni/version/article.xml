<title>Version</title>
<pragma:weight value="0.5" />
<tag name="doxygen" />
<tag name="class" />



<h2>Summary of the class <code>Version</code></h2><table class="nostyle">
<tr><td><div class="visibility">Public</div></td>
<td><h3 class="h3noleftspace">Constructor</h3>
<p class="doxygen_fun">Default constructor.<br />
<code> <span class="method"><a href="#">constructor</a></span> <span class="method"><a href="#">Version</a></span>(); [inline]</code></p>
<p class="doxygen_fun">Constructor with a given version.<br />
<code> <span class="method"><a href="#">constructor</a></span> <span class="method"><a href="#">Version</a></span>(unsigned int h); [inline]</code></p>
<p class="doxygen_fun">Constructor with a given version.<br />
<code> <span class="method"><a href="#">constructor</a></span> <span class="method"><a href="#">Version</a></span>(unsigned int h, unsigned int l); [inline]</code></p>
<p class="doxygen_fun">Constructor with a given version.<br />
<code> <span class="method"><a href="#">constructor</a></span> <span class="method"><a href="#">Version</a></span>(unsigned int h, unsigned int l, unsigned int r); [inline]</code></p>
<p class="doxygen_fun">Copy constructor.<br />
<code> <span class="method"><a href="#">constructor</a></span> <span class="method"><a href="#">Version</a></span>(const Version<b>&amp;</b> c);</code></p>
</td></tr>
<tr><td><div class="visibility">Public</div></td>
<td><h3 class="h3noleftspace">Conversions</h3>
<p class="doxygen_fun">Get the version in an human-readable string.<br />
<code>String <span class="method"><a href="#">toString</a></span>() <span class="keyword">const</span>;</code></p>
</td></tr>
<tr><td><div class="visibility">Public</div></td>
<td><h3 class="h3noleftspace">Comparisons</h3>
<p class="doxygen_fun">Get if the version is null.<br />
<code>bool <span class="method"><a href="#">null</a></span>() <span class="keyword">const</span>;</code></p>
<p class="doxygen_fun">Check if this version is less than another one.<br />
<code>bool <span class="method"><a href="#">isLessThan</a></span>(const Version<b>&amp;</b> rhs) <span class="keyword">const</span>;</code></p>
<p class="doxygen_fun">Check if this version is equal to another one.<br />
<code>bool <span class="method"><a href="#">isEqualTo</a></span>(const Version<b>&amp;</b> rhs) <span class="keyword">const</span>; [inline]</code></p>
<p class="doxygen_fun">Check if this version is greater than another one.<br />
<code>bool <span class="method"><a href="#">isGreaterThan</a></span>(const Version<b>&amp;</b> rhs) <span class="keyword">const</span>;</code></p>
</td></tr>
<tr><td><div class="visibility">Public</div></td>
<td><h3 class="h3noleftspace">ostream</h3>
<p class="doxygen_fun">Print the version to a ostream.<br />
<code>void <span class="method"><a href="#">print</a></span>(std::ostream<b>&amp;</b> out) <span class="keyword">const</span>;</code></p>
</td></tr>
<tr><td><div class="visibility">Public</div></td>
<td><h3 class="h3noleftspace">Operators</h3>
<p class="doxygen_fun">The operator &lt;.<br />
<code>bool <span class="method"><a href="#">operator&lt;</a></span>(const Version<b>&amp;</b> rhs) <span class="keyword">const</span>; [inline]</code></p>
<p class="doxygen_fun">The operator &lt;=.<br />
<code>bool <span class="method"><a href="#">operator&lt;=</a></span>(const Version<b>&amp;</b> rhs) <span class="keyword">const</span>; [inline]</code></p>
<p class="doxygen_fun">The operator &gt;<br />
<code>bool <span class="method"><a href="#">operator&gt;</a></span>(const Version<b>&amp;</b> rhs) <span class="keyword">const</span>; [inline]</code></p>
<p class="doxygen_fun">The operator &lt;=.<br />
<code>bool <span class="method"><a href="#">operator&gt;=</a></span>(const Version<b>&amp;</b> rhs) <span class="keyword">const</span>; [inline]</code></p>
<p class="doxygen_fun">The operator ==.<br />
<code>bool <span class="method"><a href="#">operator==</a></span>(const Version<b>&amp;</b> rhs) <span class="keyword">const</span>; [inline]</code></p>
<p class="doxygen_fun">The operator !=.<br />
<code>bool <span class="method"><a href="#">operator!=</a></span>(const Version<b>&amp;</b> rhs) <span class="keyword">const</span>; [inline]</code></p>
<p class="doxygen_fun">The operator =.<br />
<code>Version &amp; <span class="method"><a href="#">operator=</a></span>(const Version<b>&amp;</b> rhs);</code></p>
</td></tr>
<tr><td><div class="visibility">Public
</div></td>
<td><h3 class="h3noleftspace">Public
</h3>
<p class="doxygen_var">The major version number.<br />
<code>unsigned int <span class="method"><a href="#">hi</a></span>;</code></p>
<p class="doxygen_var">The minor version number.<br />
<code>unsigned int <span class="method"><a href="#">lo</a></span>;</code></p>
<p class="doxygen_var">Revision.<br />
<code>unsigned int <span class="method"><a href="#">revision</a></span>;</code></p>
</td></tr>
<tr><td><div class="visibility">Public
</div></td>
<td><h3 class="h3noleftspace">Public
</h3>
<p class="doxygen_fun">Get the version of the Yuni Library.<br />
<code><span class="keyword">static</span> void <span class="method"><a href="#">InternalLib</a></span>(Version<b>&amp;</b> v);</code></p>
</td></tr>
</table>


<h2>Detailed Description</h2>
