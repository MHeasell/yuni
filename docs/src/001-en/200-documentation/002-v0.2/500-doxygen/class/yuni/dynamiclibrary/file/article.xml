<title>File</title>
<pragma:weight value="0.5" />
<tag name="doxygen" />
<tag name="class" />



<h2>Summary of the class <code>File</code></h2><table class="nostyle">
<tr><td><div class="visibility">Public</div></td>
<td><h3 class="h3noleftspace">Constructor &amp; DEstructor</h3>
<p class="doxygen_fun">Default constructor.<br />
<code> <span class="method"><a href="#">File</a></span>(); [inline]</code></p>
<p class="doxygen_fun">Constructor - Load an dynamic library.<br />
<code> <span class="method"><a href="#">File</a></span>(const String<b>&amp;</b> filename, const Relocation r, const Visibility v); [inline]</code></p>
<p class="doxygen_fun">Destructor.<br />
<code> <span class="method"><a href="#"><b> ~ </b>File</a></span>(); [inline]</code></p>
</td></tr>
<tr><td><div class="visibility">Public</div></td>
<td><h3 class="h3noleftspace">Loading / Unloading</h3>
<p class="doxygen_fun">Load a dynamic library from its filename.<br />
<code>bool <span class="method"><a href="#">loadFromFile</a></span>(const String<b>&amp;</b> filename, const Relocation r, const Visibility v);</code></p>
<p class="doxygen_fun">Load a dynamic library from its filename.<br />
<code>bool <span class="method"><a href="#">loadFromRawFilename</a></span>(const char<b>*</b> filename, const Relocation r, const Visibility v);</code></p>
<p class="doxygen_fun">Load a dynamic library from its filename.<br />
<code>bool <span class="method"><a href="#">loadFromRawFilename</a></span>(const String<b>&amp;</b> filename, const Relocation r, const Visibility v); [inline]</code></p>
<p class="doxygen_fun">Unload the dynamic library.<br />
<code>void <span class="method"><a href="#">unload</a></span>();</code></p>
<p class="doxygen_fun">Get if the dynamic library is loaded.<br />
<code>bool <span class="method"><a href="#">loaded</a></span>() <span class="keyword">const</span>; [inline]</code></p>
<p class="doxygen_fun">Get the filename of the loaded library.<br />
<code>const String &amp; <span class="method"><a href="#">filename</a></span>() <span class="keyword">const</span>; [inline]</code></p>
</td></tr>
<tr><td><div class="visibility">Public</div></td>
<td><h3 class="h3noleftspace">Symbols</h3>
<p class="doxygen_fun">Get if a symbol exists in the library.<br />
<code>bool <span class="method"><a href="#">hasSymbol</a></span>(const String<b>&amp;</b> name) <span class="keyword">const</span>; [inline]</code></p>
<p class="doxygen_fun">Try to resolve the address of an exported symbol by the library.<br />
<code>Symbol <span class="method"><a href="#">resolve</a></span>(const String<b>&amp;</b> name) <span class="keyword">const</span>; [inline]</code></p>
</td></tr>
<tr><td><div class="visibility">Public</div></td>
<td><h3 class="h3noleftspace">Handle</h3>
<p class="doxygen_fun">Get the OS Dependant handle of the dynamic library.<br />
<code>Handle <span class="method"><a href="#">handle</a></span>() <span class="keyword">const</span>; [inline]</code></p>
</td></tr>
<tr><td><div class="visibility">Public</div></td>
<td><h3 class="h3noleftspace">Operators</h3>
<p class="doxygen_fun">The operator [].<br />
<code>Symbol <span class="method"><a href="#">operator[]</a></span>(const String<b>&amp;</b> name) <span class="keyword">const</span>; [inline]</code></p>
</td></tr>
<tr><td><div class="visibility">Public
</div></td>
<td><h3 class="h3noleftspace">Public
</h3>
<p>Relocations shall be performed at an implementation-defined time (see RTLD_LAZY, Unix only) Relocation options.<br />
<code><i>(unmanaged tag)</i></code></p>
<p>OS Dependant default implementation. The object’s symbols shall be made available for the relocation processing of any other object (Unix only) The object’s symbols shall not be made available for the relocation processing of any other object (Unix only) Scope of visibility options.<br />
<code><i>(unmanaged tag)</i></code></p>
<p class="doxygen_typedef">OS Dependant Handle of a shared library.<br />
<code><span class="keyword">typedef</span> void * <span class="method"><a href="#">Handle</a></span>;</code></p>
</td></tr>
<tr><td><div class="visibility">Public
</div></td>
<td><h3 class="h3noleftspace">Public
</h3>
<p class="doxygen_var">An invalid handle.<br />
<code>const Handle <span class="method"><a href="#">NullHandle</a></span>;</code></p>
</td></tr>
</table>


<h2>Detailed Description</h2>
