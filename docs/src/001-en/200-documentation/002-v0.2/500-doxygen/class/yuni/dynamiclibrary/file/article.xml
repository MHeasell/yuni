<title>File</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2><code>File</code></h2><table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructor &amp; DEstructor <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Default constructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">File</a></span>:  ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Constructor - Load an dynamic library.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">File</a></span>:  (const String&amp; filename, const Relocation r, const Visibility v);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Destructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#"><b> ~ </b>File</a></span>:  ();
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Loading / Unloading <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Load a dynamic library from its filename.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">loadFromFile</a></span>: bool (const String&amp; filename, const Relocation r, const Visibility v);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Load a dynamic library from its filename.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">loadFromRawFilename</a></span>: bool (const char* filename, const Relocation r, const Visibility v);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Load a dynamic library from its filename.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">loadFromRawFilename</a></span>: bool (const String&amp; filename, const Relocation r, const Visibility v);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Unload the dynamic library.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">unload</a></span>: void ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get if the dynamic library is loaded.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">loaded</a></span>: bool () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the filename of the loaded library.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">filename</a></span>: const String&amp; () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Symbols <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get if a symbol exists in the library.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">hasSymbol</a></span>: bool (const String&amp; name) <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Try to resolve the address of an exported symbol by the library.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">resolve</a></span>: Symbol (const String&amp; name) <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Handle <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the OS Dependant handle of the dynamic library.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">handle</a></span>: Handle () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Operators <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The operator [].<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">operator[]</a></span>: Symbol (const String&amp; name) <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td></td><td class="doxnone">Relocations shall be performed at an implementation-defined time (see RTLD_LAZY, Unix only) Relocation options.<div class="doxygen_name_spacer"></div>
<code><i>(unmanaged tag: 0)</i></code>
</td></tr>
<tr><td></td><td class="doxnone">OS Dependant default implementation. The object’s symbols shall be made available for the relocation processing of any other object (Unix only) The object’s symbols shall not be made available for the relocation processing of any other object (Unix only) Scope of visibility options.<div class="doxygen_name_spacer"></div>
<code><i>(unmanaged tag: 0)</i></code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">OS Dependant Handle of a shared library.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">Handle</a></span>: <span class="keyword">typedef</span> void*;</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_var"></td><td class="doxnone">An invalid handle.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">NullHandle</a></span>: const Handle;</code>
</td></tr>
</table>


