<title>IJob</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2><code>IJob</code></h2><table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Contructor &amp; Destructor <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Default constructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">IJob</a></span>:  ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Destructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#"><b> ~ </b>IJob</a></span>:  ();
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">ID Card <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the full human-readable name of this job.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">name</a></span>: String () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Set the name of the job.<div class="doxygen_name_spacer"></div>
<code><div id="name_3501319137232_templ" style="display:none"><span class="keyword">template</span>&lt;class StringT &gt;</div>
 <span class="method"><a href="#">name</a></span>: void (const StringT&amp; s);
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Progression <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the progression in percent (value between 0 and 100)<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">progression</a></span>: int () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get if the job is finished.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">finished</a></span>: bool () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">States <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the current state of the job.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">state</a></span>: enum Job::State () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get if the job is idle.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">idle</a></span>: bool () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get if the job is waiting for being executed.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">waiting</a></span>: bool () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get if the job is running.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">running</a></span>: bool () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get if the job is canceling its work (and it is currently running)<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">canceling</a></span>: bool () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Execution flow <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Ask to the job to cancel its work as soon as possible.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">cancel</a></span>: void ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Execute the job.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">execute</a></span>: void (Thread::IThread* t);
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The most suitable smart pointer for the class.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">Ptr</a></span>: <span class="keyword">typedef</span> SmartPtr&lt;IJob&gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The threading policy.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">ThreadingPolicy</a></span>: <span class="keyword">typedef</span> Policy::ObjectLevelLockable&lt;IJob&gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">List of jobs.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">List</a></span>: <span class="keyword">typedef</span> std::list&lt; Ptr&gt;;</code>
</td></tr>
<tr><td></td><td class="doxnone">Get if this policy is thread-safe.<div class="doxygen_name_spacer"></div>
<code><i>(unmanaged tag: 0)</i></code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code><div id="fillInformation_3641319137232_templ" style="display:none"><span class="keyword">template</span>&lt;class T &gt;</div>
 <span class="method"><a href="#">fillInformation</a></span>: void (T&amp; info);
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Protected <code class="doxygen_visibility">Protected</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Implement this method to define your own time-consuming task.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">onExecute</a></span>: void ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Set the progression in percent (0..100)<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">progression</a></span>: void (const int p);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Suspend the execution of the job during X miliseconds.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">suspend</a></span>: bool (unsigned int delay) <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get if the job should abort as soon as possible.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">shouldAbort</a></span>: bool () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Set the name of the job without locking.<div class="doxygen_name_spacer"></div>
<code><div id="nameWL_3691319137232_templ" style="display:none"><span class="keyword">template</span>&lt;class StringT &gt;</div>
 <span class="method"><a href="#">nameWL</a></span>: void (const StringT&amp; newName);
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Protected <code class="doxygen_visibility">Protected</code></h3>
</td></tr>
<tr><td class="doxygen_var"></td><td class="doxnone">Mutex.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">pMutex</a></span>: Mutex;</code>
</td></tr>
</table>


