<title>Event</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2>Event</h2>
<h3>Public typedef</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4></h4></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">EventType</a></span> : Event&lt;P&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">BindType</a></span> : Bind&lt;P&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">AncestorType</a></span> : Private::EventImpl::template WithNArguments&lt;BindType::argumentCount, BindType&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">ThreadingPolicy</a></span> : AncestorType::ThreadingPolicy</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">Ptr</a></span> : SmartPtr&lt;Event&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">FunctionType</a></span> : BindType::FunctionType</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">ReturnType</a></span> : BindType::ReturnType</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">Map</a></span> : std::map&lt; IEvent*, unsigned int&gt;</code></td></tr>
</table></div>

<h3>Public function</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4></h4></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Event</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Event</a></span>(const Event&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#"><b> ~ </b>Event</a></span>()</code></td></tr>
<tr><td></td><td><br /><h4>Connection</h4></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">connect</a></span>(typename BindType::FunctionType pointer)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">connect</a></span>(typename BindType::template WithUserData&lt; U&gt;:: FunctionType pointer, typename BindType::template WithUserData&lt; U&gt;::ParameterType userdata)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">connect</a></span>(C* o, typename PointerToMember&lt;C&gt;::Type method)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">connect</a></span>(const C* o, typename PointerToMember&lt;C&gt;::ConstType method)</code></td></tr>
<tr><td></td><td><br /><h4>Disconnection</h4></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">remove</a></span>(const U* object)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">clear</a></span>()</code></td></tr>
<tr><td></td><td><br /><h4>Misc</h4></td></tr>
<tr><td class="doxygen_index"><code>unsigned int </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">size</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>unsigned int </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">count</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">empty</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">notEmpty</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td></td><td><br /><h4>Operators</h4></td></tr>
<tr><td class="doxygen_index"><code>Event&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator=</a></span>(const NullPtr&amp; )</code></td></tr>
<tr><td class="doxygen_index"><code>Event&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator=</a></span>(const Event&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator!</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td></td><td><br /><h4></h4></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">connect</a></span>(C* o, typename Event&lt;P&gt;::template PointerToMember&lt;C&gt;::Type method)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">connect</a></span>(const C* o, typename Event&lt;P&gt;::template PointerToMember&lt;C&gt;::ConstType method)</code></td></tr>
</table></div>

<h2>Detailed Description</h2><table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_enum"></td><td class="doxnone"><div class="doxygen_brief"><code><i>(unmanaged tag: 4)</i></code>
</div></td></tr><tr id="@170argumentCount_22291319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_enum"></td><td class="doxnone"><div class="doxygen_brief"><code><i>(unmanaged tag: 4)</i></code>
</div></td></tr><tr id="@171hasReturnValue_22301319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Event .<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ EventType</a></span>: <span class="keyword">typedef</span> Event&lt;P&gt;;
</code>
</div></td></tr><tr id="EventType_22311319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">The Bind Type.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ BindType</a></span>: <span class="keyword">typedef</span> Bind&lt;P&gt;;
</code>
</div></td></tr><tr id="BindType_22321319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Type of the Ancestor.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ AncestorType</a></span>: <span class="keyword">typedef</span> Private::EventImpl::template WithNArguments&lt;BindType::argumentCount, BindType&gt;;
</code>
</div></td></tr><tr id="AncestorType_22331319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">The Threading Policy .<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ ThreadingPolicy</a></span>: <span class="keyword">typedef</span> AncestorType::ThreadingPolicy;
</code>
</div></td></tr><tr id="ThreadingPolicy_22341319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">The most suitable smartptr for the class.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ Ptr</a></span>: <span class="keyword">typedef</span> SmartPtr&lt;Event&gt;;
</code>
</div></td></tr><tr id="Ptr_22351319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Pointer-to-function.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ FunctionType</a></span>: <span class="keyword">typedef</span> BindType::FunctionType;
</code>
</div></td></tr><tr id="FunctionType_22361319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">The type of the return value.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ ReturnType</a></span>: <span class="keyword">typedef</span> BindType::ReturnType;
</code>
</div></td></tr><tr id="ReturnType_22371319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">IEvent list.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ Map</a></span>: <span class="keyword">typedef</span> std::map&lt; IEvent*, unsigned int&gt;;
</code>
</div></td></tr><tr id="Map_22381319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">name Constructor &amp; Destructor<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ Event</a></span>:  ();
</code>
</div></td></tr><tr id="Event_22391319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">Default Constructor<br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Copy constructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ Event</a></span>:  (const Event&amp; rhs);
</code>
</div></td></tr><tr id="Event_22401319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Destructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ <b> ~ </b>Event</a></span>:  ();
</code>
</div></td></tr><tr id="~Event_22411319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Connection <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Connect to a function.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ connect</a></span>: void (typename BindType::FunctionType pointer);
</code>
</div></td></tr><tr id="connect_22421319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> pointer</code> Pointer-to-function<br /></li></ul><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Connect to a function with a custom user data.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="connect_22431319844517_tmpl"><span class="keyword">template</span>&lt;class U &gt;</div>
 <span class="method"><a href="#">+ connect</a></span>: void (typename BindType::template WithUserData&lt; U&gt;:: FunctionType pointer, typename BindType::template WithUserData&lt; U&gt;::ParameterType userdata);
</code>
</div></td></tr><tr id="connect_22431319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> pointer</code> Pointer-to-function<br /></li><li><code> userdata</code> The userdata to copy and store<br /></li></ul><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Connect to a object member.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="connect_22441319844517_tmpl"><span class="keyword">template</span>&lt;class C &gt;</div>
 <span class="method"><a href="#">+ connect</a></span>: void (C* o, typename PointerToMember&lt;C&gt;::Type method);
</code>
</div></td></tr><tr id="connect_22441319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> o</code> An object, with the class IEventObserver as ancestor (can be null)<br /></li><li><code> method</code> Pointer-to-member<br /></li></ul><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Connect to a const object member.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="connect_22451319844517_tmpl"><span class="keyword">template</span>&lt;class C &gt;</div>
 <span class="method"><a href="#">+ connect</a></span>: void (const C* o, typename PointerToMember&lt;C&gt;::ConstType method);
</code>
</div></td></tr><tr id="connect_22451319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> o</code> An object, with the class IEventObserver as ancestor (can be null)<br /></li><li><code> method</code> const Pointer-to-member<br /></li></ul><br />
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Disconnection <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Disconnect all methods of an arbitrary object connected to the event.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="remove_22461319844517_tmpl"><span class="keyword">template</span>&lt;class U &gt;</div>
 <span class="method"><a href="#">+ remove</a></span>: void (const U* object);
</code>
</div></td></tr><tr id="remove_22461319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> object</code> The object to find and to disconnect<br /></li></ul><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Disconnect all.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ clear</a></span>: void ();
</code>
</div></td></tr><tr id="clear_22471319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Misc <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get the number of current connections.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ size</a></span>: unsigned int () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="size_22481319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><code> <span class="method"><a href="#">+ count</a></span>: unsigned int () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="count_22491319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div><code>see</code> :  size()<br /></div><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get if the event does not have any single callback.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ empty</a></span>: bool () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="empty_22501319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get if the event has at least one callback.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ notEmpty</a></span>: bool () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="notEmpty_22511319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Operators <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Assignment with a nullptr (equivalent to clear() )<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator=</a></span>: Event&amp; (const NullPtr&amp; );
</code>
</div></td></tr><tr id="operator=_22521319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Copy operator.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator=</a></span>: Event&amp; (const Event&amp; rhs);
</code>
</div></td></tr><tr id="operator=_22531319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get if the event is empty.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator!</a></span>: bool () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="operator!_22541319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><code><div class="doxygen_tmpllist" id="connect_22551319844517_tmpl"><span class="keyword">template</span>&lt;class C &gt;</div>
 <span class="method"><a href="#">+ connect</a></span>: void (C* o, typename Event&lt;P&gt;::template PointerToMember&lt;C&gt;::Type method);
</code>
</div></td></tr><tr id="connect_22551319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><code><div class="doxygen_tmpllist" id="connect_22561319844517_tmpl"><span class="keyword">template</span>&lt;class C &gt;</div>
 <span class="method"><a href="#">+ connect</a></span>: void (const C* o, typename Event&lt;P&gt;::template PointerToMember&lt;C&gt;::ConstType method);
</code>
</div></td></tr><tr id="connect_22561319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
</table>


