<title>Array</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2>Container for thread</h2>
<h3>Public typedef</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4></h4></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a name="#classYuni_1_1Thread_1_1Array_1a60fce681998894e4772b7033c035cec5" href="#">ArrayType</a></span> : Array&lt;T&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a name="#classYuni_1_1Thread_1_1Array_1a56f17a8d79253e63c1761fd2e2cf47d0" href="#">Ptr</a></span> : SmartPtr&lt;ArrayType&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a name="#classYuni_1_1Thread_1_1Array_1a1892aaf2b05ceea684e4db265b1099df" href="#">ThreadType</a></span> : T</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a name="#classYuni_1_1Thread_1_1Array_1afb063ceaebadb583e634ed2fdabf70a2" href="#">ThreadPtr</a></span> : T::Ptr</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a name="#classYuni_1_1Thread_1_1Array_1a4141d0dd168197fbaea114b1ab9c2fef" href="#">ThreadingPolicy</a></span> : Policy::ObjectLevelLockable&lt;ArrayType&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a name="#classYuni_1_1Thread_1_1Array_1a29f7eb8640fb177e5112688dac602b18" href="#">ThreadList</a></span> : std::vector&lt; typename T::Ptr&gt;</code></td></tr>
</table></div>

<h3>Public function</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4>Constructor</h4></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a65a5972e85ae2b49654d5cfebea7cc63">Array</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a9f80006791b97cbbb567c47d8c4f20ff">Array</a></span>(const Array&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a91bc562ac87abd0e497824ec7bc1c0e3">Array</a></span>(unsigned int n)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a8ff180bbae787589435826aa717a8706">Array</a></span>(unsigned int n, bool autoStart)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a29cd3fb4d373d42ba90cd89d8c9e1301"><b> ~ </b>Array</a></span>()</code></td></tr>
<tr><td></td><td><br /><h4>Settings</h4></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1aa5985eb5ece8a116d4be7175a6b58103">autoStart</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1afa3fed7ddd4f271be1d4b64cd7055857">autoStart</a></span>(const bool v)</code></td></tr>
<tr><td></td><td><br /><h4>Operators</h4></td></tr>
<tr><td class="doxygen_index"><code>T::Ptr </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1aea5d2935b4b309a49408cbc321f74ac7">operator[]</a></span>(unsigned int index) <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>Array&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1aae458abbe56c3f58967de3c0ba8c48cb">operator=</a></span>(const Array&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Array&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1abf0850a454c2aaab7e32c6a63df657eb">operator=</a></span>(const Ptr&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Array&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a890030f4ce3e67386b84c5646b6ba737">operator+=</a></span>(const Array&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Array&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1ab5ba65c09e04f2b468806daedced61ff">operator+=</a></span>(T* rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Array&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1ad58d534381a8d4bfe77ab540eebc6ce9">operator+=</a></span>(const typename T::Ptr&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Array&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a1618b35b52a8ac20e2d8d15fcfbbc725">operator+=</a></span>(const Ptr&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Array&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1ab38551c329f02f7961d66136eb1c39d0">operator&lt;&lt;</a></span>(const Array&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Array&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a07e567227be6f981883d6b41c6087148">operator&lt;&lt;</a></span>(const Ptr&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Array&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a05268a60fe42d7fc3712ff32e22d009a">operator&lt;&lt;</a></span>(T* rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Array&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a0413f79b978c58725b3bd1264b4e09b2">operator&lt;&lt;</a></span>(const typename T::Ptr&amp; rhs)</code></td></tr>
<tr><td></td><td><br /><h4></h4></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a1c39a4857eee452fcfe7f9cce3bcbf15">clear</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a837dff1454e5c3d17ae7516363be4564">add</a></span>(typename T::Ptr thread)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a4ab0782e5faa17eed4b5e4f6e0db9ef2">add</a></span>(typename T::Ptr thread, bool autostart)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1aaa0db09eded1c2d59a3aebed07ea35ca">push_back</a></span>(typename T::Ptr thread)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1af0a9e5bab62192a17d26fa6e4bd3d2f8">resize</a></span>(unsigned int n)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a00510fb8d6ec912de081641a437b0edd">start</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a92ca134b93cfc07a6b2398062fd200ec">gracefulStop</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1aab7810b7b9292afe473edd99d6d48ce4">stop</a></span>(unsigned int timeout)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a38d1626f548daa44482efbd3edb670de">restart</a></span>(unsigned int timeout)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a8de13995d99230a07ba80ff488cb2112">wakeUp</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>unsigned int </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a40ceb6cc62b9cdf7717fe5aad583ad5f">size</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>unsigned int </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a7935f2047f7540b652f2723eeb1d6edc">count</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1a62e79bfc1568c0a3c092df888fb97b03">empty</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Thread_1_1Array_1ab73cc1f0a446744c183ddd4a0d6da96a">foreachThread</a></span>(PredicateT&amp; predicate) <span class="keyword">const</span></code></td></tr>
</table></div>

<h2>Detailed Description</h2><div>This class is a convenient container for dealing with several threads at the same time.<br /> Performance Tip: If the threads within this container are destined to die, you should use the method stop() before destroying this class. This method will make them stop gracefully and asynchronously and you should earn a lot of time.<br /></div><div style="margin-top:3em;border:1px solid #aaa;border-bottom-style:none;border-left-style:none;border-right-style:none"></div>
<table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_enum"></td><td class="doxnone"><div class="doxygen_brief"><code><i>(unmanaged tag: 4)</i></code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief"><b>Itself.<br /></b><div class="doxygen_name_spacer"></div>
<code><span class="method"><a name="classYuni_1_1Thread_1_1Array_1a60fce681998894e4772b7033c035cec5" href="#">+ ArrayType</a></span>: <span class="keyword">typedef</span> Array&lt;T&gt;;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief"><b>The most suitable smart pointer.<br /></b><div class="doxygen_name_spacer"></div>
<code><span class="method"><a name="classYuni_1_1Thread_1_1Array_1a56f17a8d79253e63c1761fd2e2cf47d0" href="#">+ Ptr</a></span>: <span class="keyword">typedef</span> SmartPtr&lt;ArrayType&gt;;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief"><b>Thread .<br /></b><div class="doxygen_name_spacer"></div>
<code><span class="method"><a name="classYuni_1_1Thread_1_1Array_1a1892aaf2b05ceea684e4db265b1099df" href="#">+ ThreadType</a></span>: <span class="keyword">typedef</span> T;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief"><b>Smart Pointer for the thread.<br /></b><div class="doxygen_name_spacer"></div>
<code><span class="method"><a name="classYuni_1_1Thread_1_1Array_1afb063ceaebadb583e634ed2fdabf70a2" href="#">+ ThreadPtr</a></span>: <span class="keyword">typedef</span> T::Ptr;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief"><b>Threading Policy .<br /></b><div class="doxygen_name_spacer"></div>
<code><span class="method"><a name="classYuni_1_1Thread_1_1Array_1a4141d0dd168197fbaea114b1ab9c2fef" href="#">+ ThreadingPolicy</a></span>: <span class="keyword">typedef</span> Policy::ObjectLevelLockable&lt;ArrayType&gt;;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief"><b>Thread list.<br /></b><div class="doxygen_name_spacer"></div>
<code><span class="method"><a name="classYuni_1_1Thread_1_1Array_1a29f7eb8640fb177e5112688dac602b18" href="#">+ ThreadList</a></span>: <span class="keyword">typedef</span> std::vector&lt; typename T::Ptr&gt;;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_enum"></td><td class="doxnone"><div class="doxygen_brief"><b>Get if this policy is thread-safe.<br /></b><div class="doxygen_name_spacer"></div>
<code><i>(unmanaged tag: 4)</i></code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructor <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Default Constructor.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a65a5972e85ae2b49654d5cfebea7cc63" href="#">+ Array</a></span>:  ();
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Copy constructor.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a9f80006791b97cbbb567c47d8c4f20ff" href="#">+ Array</a></span>:  (const Array&amp; rhs);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Constructor with a given amount of thread.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a91bc562ac87abd0e497824ec7bc1c0e3" href="#">+ Array</a></span>:  (unsigned int n);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Constructor, with a given amount of thread.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a8ff180bbae787589435826aa717a8706" href="#">+ Array</a></span>:  (unsigned int n, bool autoStart);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Destructor.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a29cd3fb4d373d42ba90cd89d8c9e1301" href="#">+ <b> ~ </b>Array</a></span>:  ();
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Settings <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Get if the new thread are automatically started.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1aa5985eb5ece8a116d4be7175a6b58103" href="#">+ autoStart</a></span>: bool () <span class="keyword">const</span>;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Set if the new thread are automatically started.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1afa3fed7ddd4f271be1d4b64cd7055857" href="#">+ autoStart</a></span>: void (const bool v);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Operators <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Get the pointer to a specific thread.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1aea5d2935b4b309a49408cbc321f74ac7" href="#">+ operator[]</a></span>: T::Ptr (unsigned int index) <span class="keyword">const</span>;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> index</code> A zero-based index of the thread (invalid values accepted)<br /></li></ul><div><code>return</code>  A pointer to the thread (can be NULL if the index is invalid)<br /></div><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Copy operator.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1aae458abbe56c3f58967de3c0ba8c48cb" href="#">+ operator=</a></span>: Array&amp; (const Array&amp; rhs);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Copy operator.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1abf0850a454c2aaab7e32c6a63df657eb" href="#">+ operator=</a></span>: Array&amp; (const Ptr&amp; rhs);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Aggregate.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a890030f4ce3e67386b84c5646b6ba737" href="#">+ operator+=</a></span>: Array&amp; (const Array&amp; rhs);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Aggregate.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1ab5ba65c09e04f2b468806daedced61ff" href="#">+ operator+=</a></span>: Array&amp; (T* rhs);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Aggregate.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1ad58d534381a8d4bfe77ab540eebc6ce9" href="#">+ operator+=</a></span>: Array&amp; (const typename T::Ptr&amp; rhs);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Aggregate.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a1618b35b52a8ac20e2d8d15fcfbbc725" href="#">+ operator+=</a></span>: Array&amp; (const Ptr&amp; rhs);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Aggregate.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1ab38551c329f02f7961d66136eb1c39d0" href="#">+ operator&lt;&lt;</a></span>: Array&amp; (const Array&amp; rhs);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Aggregate.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a07e567227be6f981883d6b41c6087148" href="#">+ operator&lt;&lt;</a></span>: Array&amp; (const Ptr&amp; rhs);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Aggregate.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a05268a60fe42d7fc3712ff32e22d009a" href="#">+ operator&lt;&lt;</a></span>: Array&amp; (T* rhs);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Aggregate.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a0413f79b978c58725b3bd1264b4e09b2" href="#">+ operator&lt;&lt;</a></span>: Array&amp; (const typename T::Ptr&amp; rhs);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Clear the pool (remove all threads)<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a1c39a4857eee452fcfe7f9cce3bcbf15" href="#">+ clear</a></span>: void ();
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">Performance Tip: If the threads within this container are destined to die, you should use the method stop() before destroying this class. This method will make them stop gracefully and asynchronously and you should earn a lot of time.<br /><div><b>warning</b> :  This method may block until all removed threads are destroyed (and stopped) if they are not used any longer.<br /></div><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Add an existing thread into the container.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a837dff1454e5c3d17ae7516363be4564" href="#">+ add</a></span>: void (typename T::Ptr thread);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">The thread will be automatically started if autoStart() is true.<br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Add an existing thread into the container.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a4ab0782e5faa17eed4b5e4f6e0db9ef2" href="#">+ add</a></span>: void (typename T::Ptr thread, bool autostart);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> thread</code> The thread to add<br /></li><li><code> autostart</code> True to start the thread before adding it, false to do nothing (whatever the value of autoStart() )<br /></li></ul><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1aaa0db09eded1c2d59a3aebed07ea35ca" href="#">+ push_back</a></span>: void (typename T::Ptr thread);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div><code>see</code> :  add(typename T::Ptr)<br /></div><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Resize the pool.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1af0a9e5bab62192a17d26fa6e4bd3d2f8" href="#">+ resize</a></span>: void (unsigned int n);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">This method will have no effect if the new number of threads is equal to the number of threads currently in the pool. If the new value is greater than the current one, some new threads will be created, otherwise the remaining threads will be removed from the pool. A thread that has been removed is not necessary stopped neither destroyed, since all threads in the pool are managed by a smart pointer.<br /><div><b>warning</b> :  This method may block until all removed threads are destroyed (and stopped) if they are not used any longer.<br /></div><div class="doxygen_params">Parameters :</div><ul><li><code> n</code> The new number of threads in the pool<br /></li></ul><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Start all threads.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a00510fb8d6ec912de081641a437b0edd" href="#">+ start</a></span>: void ();
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Ask to all threads to stop their execution as soon as possible.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a92ca134b93cfc07a6b2398062fd200ec" href="#">+ gracefulStop</a></span>: void ();
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Stop all threads.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1aab7810b7b9292afe473edd99d6d48ce4" href="#">+ stop</a></span>: void (unsigned int timeout);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div><b>warning</b> :  This method may block until all removed threads are destroyed (and stopped) if they are not used any longer.<br /></div><div class="doxygen_params">Parameters :</div><ul><li><code> timeout</code> A timeout for waiting a thread to stop (in milliseconds)<br /></li></ul><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Restart all threads.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a38d1626f548daa44482efbd3edb670de" href="#">+ restart</a></span>: void (unsigned int timeout);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div><b>warning</b> :  This method may block until all removed threads are destroyed (and stopped) if they are not used any longer.<br /></div><div class="doxygen_params">Parameters :</div><ul><li><code> timeout</code> A timeout for waiting a thread to stop (in milliseconds)<br /></li></ul><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Wake up all threads.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a8de13995d99230a07ba80ff488cb2112" href="#">+ wakeUp</a></span>: void ();
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">This action will have no effect for all threads not already started.<br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Get the number of threads.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a40ceb6cc62b9cdf7717fe5aad583ad5f" href="#">+ size</a></span>: unsigned int () <span class="keyword">const</span>;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a7935f2047f7540b652f2723eeb1d6edc" href="#">+ count</a></span>: unsigned int () <span class="keyword">const</span>;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div><code>see</code> :  size()<br /></div><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Get if the array is empty.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Thread_1_1Array_1a62e79bfc1568c0a3c092df888fb97b03" href="#">+ empty</a></span>: bool () <span class="keyword">const</span>;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Execute a predicate for each thread in pool.<br /></b><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist"><span class="keyword">template</span>&lt;class PredicateT &gt;</div>
 <span class="method"><a name="classYuni_1_1Thread_1_1Array_1ab73cc1f0a446744c183ddd4a0d6da96a" href="#">+ foreachThread</a></span>: void (PredicateT&amp; predicate) <span class="keyword">const</span>;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">The following prototype will be used :<source type="cpp">  bool  operator  ()  ( typename  T::Ptr&amp;  thread);
</source>
<br />
</div>
</td></tr>
</table>


