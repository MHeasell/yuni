<title>QueueService</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2>A Multithreaded Job QueueService</h2>
<h3>Public typedef</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4></h4></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">QueueServiceType</a></span> : QueueService&lt;SchedulerT&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">ThreadingPolicy</a></span> : Policy::ObjectLevelLockable&lt;QueueServiceType&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">Ptr</a></span> : SmartPtr&lt;QueueServiceType&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">SchedulerPolicy</a></span> : SchedulerT</code></td></tr>
</table></div>

<h3>Public function</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4>Constructor &amp; Destructor</h4></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">QueueService</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">QueueService</a></span>(bool autostart)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#"><b> ~ </b>QueueService</a></span>()</code></td></tr>
<tr><td></td><td><br /><h4>Service</h4></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">start</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">wait</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">wait</a></span>(unsigned int timeout, unsigned int pollInterval)</code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">stop</a></span>(unsigned int timeout)</code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">restart</a></span>(unsigned int timeout)</code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">started</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td></td><td><br /><h4>Jobs handling</h4></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">add</a></span>(IJob* job)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">add</a></span>(const IJob::Ptr&amp; job)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">add</a></span>(const IJob::Ptr&amp; job, Priority priority)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">add</a></span>(IJob* job, Priority priority)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">activitySnapshot</a></span>(typename ThreadInfo::Vector&amp; out)</code></td></tr>
<tr><td class="doxygen_index"><code>unsigned int </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">size</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>unsigned int </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">count</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td></td><td><br /><h4>Threads</h4></td></tr>
<tr><td class="doxygen_index"><code>unsigned int </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">threadCount</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td></td><td><br /><h4>Operators</h4></td></tr>
<tr><td class="doxygen_index"><code>QueueService&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator+=</a></span>(IJob* job)</code></td></tr>
<tr><td class="doxygen_index"><code>QueueService&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator&lt;&lt;</a></span>(IJob* job)</code></td></tr>
<tr><td class="doxygen_index"><code>QueueService&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator+=</a></span>(const IJob::Ptr&amp; job)</code></td></tr>
<tr><td class="doxygen_index"><code>QueueService&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator&lt;&lt;</a></span>(const IJob::Ptr&amp; job)</code></td></tr>
</table></div>

<h2>Detailed Description</h2><div><ul><li> Breve description du fonctionnement (file d'attente et mode d'execution)<br /></li><li> Exemple d'utilisation centré sur la file (comment on déclare un job:<div><code>see</code> :  Job::IJob )<br /></div><div class="doxygen_params">Parameters :</div><ul><li><code> SchedulerT</code> The thread Scheduler policy<br /></li></ul><br /></li></ul><br /></div>
<table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_enum"></td><td class="doxnone"><div class="doxygen_brief"><code><i>(unmanaged tag: 4)</i></code>
</div></td></tr><tr id="@360defaultTimeout_3391319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">QueueService .<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ QueueServiceType</a></span>: <span class="keyword">typedef</span> QueueService&lt;SchedulerT&gt;;
</code>
</div></td></tr><tr id="QueueServiceType_3401319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">The threading policy.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ ThreadingPolicy</a></span>: <span class="keyword">typedef</span> Policy::ObjectLevelLockable&lt;QueueServiceType&gt;;
</code>
</div></td></tr><tr id="ThreadingPolicy_3411319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">The most suitable smart pointer for the class.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ Ptr</a></span>: <span class="keyword">typedef</span> SmartPtr&lt;QueueServiceType&gt;;
</code>
</div></td></tr><tr id="Ptr_3421319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">The Scheduler policy.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ SchedulerPolicy</a></span>: <span class="keyword">typedef</span> SchedulerT;
</code>
</div></td></tr><tr id="SchedulerPolicy_3431319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_enum"></td><td class="doxnone"><div class="doxygen_brief">Get if this policy is thread-safe.<br /><div class="doxygen_name_spacer"></div>
<code><i>(unmanaged tag: 4)</i></code>
</div></td></tr><tr id="@369_3441319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructor &amp; Destructor <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Default Constructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ QueueService</a></span>:  ();
</code>
</div></td></tr><tr id="QueueService_3451319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Constructor, with an autostart mode.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ QueueService</a></span>:  (bool autostart);
</code>
</div></td></tr><tr id="QueueService_3461319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> autostart</code> True to automatically start the service<br /></li></ul><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Destructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ <b> ~ </b>QueueService</a></span>:  ();
</code>
</div></td></tr><tr id="~QueueService_3471319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Service <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Start the service and execute the jobs.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ start</a></span>: bool ();
</code>
</div></td></tr><tr id="start_3481319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Wait until all jobs are finished.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ wait</a></span>: void ();
</code>
</div></td></tr><tr id="wait_3491319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Wait until all jobs are finished.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ wait</a></span>: bool (unsigned int timeout, unsigned int pollInterval);
</code>
</div></td></tr><tr id="wait_3501319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> timeout</code> Timeout<br /></li><li><code> pollInterval</code> Interval in milliseconds between each poll when waiting<br /></li></ul><div><code>return</code>  True if no all jobs are finished, false if the timeout has been reached<br /></div><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Stop the service.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ stop</a></span>: bool (unsigned int timeout);
</code>
</div></td></tr><tr id="stop_3511319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">All unfinished jobs will be kept and re-executed at the next start. It is of their responsibility to properly resume if they have to. All working threads will be destroyed at the very end of this method.<br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Stop then start the service.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ restart</a></span>: bool (unsigned int timeout);
</code>
</div></td></tr><tr id="restart_3521319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">All unfinished jobs will be kept and re-executed at the next start. It is of their responsibility to properly resume if they have to.<br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get if the service is started.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ started</a></span>: bool () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="started_3531319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Jobs handling <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Add a job into the queue.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ add</a></span>: void (IJob* job);
</code>
</div></td></tr><tr id="add_3541319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div><b>warning</b> :  The job may already be into the queue. However it must ensure its thread-safety in this case.<br /></div><div class="doxygen_params">Parameters :</div><ul><li><code> job</code> The job to add<br /></li></ul><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Add a job into the queue.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ add</a></span>: void (const IJob::Ptr&amp; job);
</code>
</div></td></tr><tr id="add_3551319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div><b>warning</b> :  The job may already be into the queue. However it must ensure its thread-safety in this case.<br /></div><div class="doxygen_params">Parameters :</div><ul><li><code> job</code> The job to add<br /></li></ul><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Add a job into the queue.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ add</a></span>: void (const IJob::Ptr&amp; job, Priority priority);
</code>
</div></td></tr><tr id="add_3561319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div><b>warning</b> :  The job may already be into the queue. However it must ensure its thread-safety in this case.<br /></div><div class="doxygen_params">Parameters :</div><ul><li><code> job</code> The job to add<br /></li><li><code> priority</code> Its priority execution<br /></li></ul><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Add a job into the queue.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ add</a></span>: void (IJob* job, Priority priority);
</code>
</div></td></tr><tr id="add_3571319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div><b>warning</b> :  The job may already be into the queue. However it must ensure its thread-safety in this case.<br /></div><div class="doxygen_params">Parameters :</div><ul><li><code> job</code> The job to add<br /></li><li><code> priority</code> Its priority execution<br /></li></ul><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Retrieve information about the activity of the queue manager.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ activitySnapshot</a></span>: void (typename ThreadInfo::Vector&amp; out);
</code>
</div></td></tr><tr id="activitySnapshot_3581319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div><b>note</b> :  Event if in the list, a job may already have finished its work at the end of this method.<br /></div><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get the number of jobs waiting to be executed.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ size</a></span>: unsigned int () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="size_3591319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">This value does not take into account the number of jobs currently running.<br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><code> <span class="method"><a href="#">+ count</a></span>: unsigned int () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="count_3601319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div><code>see</code> :  size()<br /></div><br />
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Threads <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get the number of threads.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ threadCount</a></span>: unsigned int () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="threadCount_3611319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Operators <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">The operator &lt;&lt; (add a job)<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator+=</a></span>: QueueService&amp; (IJob* job);
</code>
</div></td></tr><tr id="operator+=_3621319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">The operator &lt;&lt; (add a job)<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator&lt;&lt;</a></span>: QueueService&amp; (IJob* job);
</code>
</div></td></tr><tr id="operator<<_3631319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">The operator &lt;&lt; (add a job)<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator+=</a></span>: QueueService&amp; (const IJob::Ptr&amp; job);
</code>
</div></td></tr><tr id="operator+=_3641319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">The operator &lt;&lt; (add a job)<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator&lt;&lt;</a></span>: QueueService&amp; (const IJob::Ptr&amp; job);
</code>
</div></td></tr><tr id="operator<<_3651319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
</table>


