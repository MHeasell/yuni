<title>QueueService</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2><code>QueueService</code></h2><table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructor &amp; Destructor <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Default Constructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">QueueService</a></span>:  ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Constructor, with an autostart mode.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">QueueService</a></span>:  (bool autostart);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Destructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#"><b> ~ </b>QueueService</a></span>:  ();
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Service <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Start the service and execute the jobs.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">start</a></span>: bool ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Wait until all jobs are finished.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">wait</a></span>: void ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Wait until all jobs are finished.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">wait</a></span>: bool (unsigned int timeout, unsigned int pollInterval);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Stop the service.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">stop</a></span>: bool (unsigned int timeout);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Stop then start the service.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">restart</a></span>: bool (unsigned int timeout);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get if the service is started.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">started</a></span>: bool () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Jobs handling <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Add a job into the queue.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">add</a></span>: void (IJob* job);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Add a job into the queue.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">add</a></span>: void (const IJob::Ptr&amp; job);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Add a job into the queue.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">add</a></span>: void (const IJob::Ptr&amp; job, Priority priority);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Add a job into the queue.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">add</a></span>: void (IJob* job, Priority priority);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Retrieve information about the activity of the queue manager.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">activitySnapshot</a></span>: void (typename ThreadInfo::Vector&amp; out);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the number of jobs waiting to be executed.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">size</a></span>: unsigned int () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">count</a></span>: unsigned int () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Threads <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the number of threads.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">threadCount</a></span>: unsigned int () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Operators <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The operator &lt;&lt; (add a job)<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">operator+=</a></span>: QueueService&amp; (IJob* job);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The operator &lt;&lt; (add a job)<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">operator&lt;&lt;</a></span>: QueueService&amp; (IJob* job);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The operator &lt;&lt; (add a job)<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">operator+=</a></span>: QueueService&amp; (const IJob::Ptr&amp; job);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The operator &lt;&lt; (add a job)<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">operator&lt;&lt;</a></span>: QueueService&amp; (const IJob::Ptr&amp; job);
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td></td><td class="doxnone">A default timeout.<div class="doxygen_name_spacer"></div>
<code><i>(unmanaged tag: 0)</i></code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">QueueService .<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">QueueServiceType</a></span>: <span class="keyword">typedef</span> QueueService&lt;SchedulerT&gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The threading policy.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">ThreadingPolicy</a></span>: <span class="keyword">typedef</span> Policy::ObjectLevelLockable&lt;QueueServiceType&gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The most suitable smart pointer for the class.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">Ptr</a></span>: <span class="keyword">typedef</span> SmartPtr&lt;QueueServiceType&gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The Scheduler policy.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">SchedulerPolicy</a></span>: <span class="keyword">typedef</span> SchedulerT;</code>
</td></tr>
<tr><td></td><td class="doxnone">Get if this policy is thread-safe.<div class="doxygen_name_spacer"></div>
<code><i>(unmanaged tag: 0)</i></code>
</td></tr>
</table>


