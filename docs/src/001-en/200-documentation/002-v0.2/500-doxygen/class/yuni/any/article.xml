<title>Any</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2>An Any is a container for a value of any type. This is a relatively classic, yet (i hope) fast implementation of an Any type</h2>
<h3>Public function</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4>Constructors</h4></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Any_1a655d52568371832cb1899295f2946a0a">Any</a></span>(const T&amp; source)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Any_1a9ba1ab6b81258236c3a989c481c55351">Any</a></span>(const char* source)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Any_1a85174e200984aaccecd213d77b684016">Any</a></span>(char* source)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Any_1a1aceceaa9a9f9ac5f15669a201a73883">Any</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Any_1ac9d41690698d161ecd0ce9d278be5a51">Any</a></span>(const Any&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Any_1a1507ff8d08d4041d2fc6797b277154a9"><b> ~ </b>Any</a></span>()</code></td></tr>
<tr><td></td><td><br /><h4>Alteration methods</h4></td></tr>
<tr><td class="doxygen_index"><code>Any&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Any_1aca6a4a9a6a7bc3f134e91ae5f51e32b0">assign</a></span>(const Any&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Any&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Any_1a83a91c0d36830bf7b7d454ece837ae69">assign</a></span>(const T&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Any&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Any_1a3288fa1f66a6762bfafb417ddcde4a5b">assign</a></span>(const char* rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Any&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Any_1ae33f7cdacc7e407b3889efd159d27b2f">operator=</a></span>(T const&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Any_1a5b1f79c193ec6484496c98f631f04067">reset</a></span>()</code></td></tr>
<tr><td></td><td><br /><h4>Information methods</h4></td></tr>
<tr><td class="doxygen_index"><code>const std::type_info&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Any_1a260bd08d99e95198f9db279374a8fb41">type</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Any_1a5cab251e98cf150ca859eb7ac97f342c">is</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Any_1ae5fcb59f6241b078490970821f0105fd">empty</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td></td><td><br /><h4>Retrieval methods</h4></td></tr>
<tr><td class="doxygen_index"><code>const T&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Any_1aab522bd0bb02fb1c9eef540081683d46">to</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td></td><td><br /><h4></h4></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">static</span> void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Any_1a375a5266fedda315adde0dd539ae8c00">Swap</a></span>(Any&amp; one, Any&amp; other)</code></td></tr>
</table></div>

<h2>Detailed Description</h2><div>How to use:<source type="cpp">  Any  v(3.14);

  if  (v.is&lt; double &gt;())
    //  Be  sure  to  check  the  type  before,  otherwise  Any  will  throw  an  exception.
    std::cout  &lt;&lt;  v.cast&lt; double &gt;();
</source>
<br /></div><div style="margin-top:3em;border:1px solid #aaa;border-bottom-style:none;border-left-style:none;border-right-style:none"></div>
<table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructors <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Copy of an existing variable.<br /></b><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist"><span class="keyword">template</span>&lt;typename T &gt;</div>
 <span class="method"><a name="classYuni_1_1Any_1a655d52568371832cb1899295f2946a0a" href="#">+ Any</a></span>:  (const T&amp; source);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Copy of an existing const C string.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Any_1a9ba1ab6b81258236c3a989c481c55351" href="#">+ Any</a></span>:  (const char* source);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Copy of an existing const C string.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Any_1a85174e200984aaccecd213d77b684016" href="#">+ Any</a></span>:  (char* source);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Empty constructor.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Any_1a1aceceaa9a9f9ac5f15669a201a73883" href="#">+ Any</a></span>:  ();
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Copy constructor.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Any_1ac9d41690698d161ecd0ce9d278be5a51" href="#">+ Any</a></span>:  (const Any&amp; rhs);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Destructor.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Any_1a1507ff8d08d4041d2fc6797b277154a9" href="#">+ <b> ~ </b>Any</a></span>:  ();
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Alteration methods <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Assignment from another Any .<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Any_1aca6a4a9a6a7bc3f134e91ae5f51e32b0" href="#">+ assign</a></span>: Any&amp; (const Any&amp; rhs);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> rhs</code> The Any to assign from<br /></li></ul><div><code>return</code>  This Any<br /></div><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Assignment from any object.<br /></b><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist"><span class="keyword">template</span>&lt;typename T &gt;</div>
 <span class="method"><a name="classYuni_1_1Any_1a83a91c0d36830bf7b7d454ece837ae69" href="#">+ assign</a></span>: Any&amp; (const T&amp; rhs);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> rhs</code> The object to assign from<br /></li></ul><div><code>return</code>  This Any<br /></div><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Specialized assign for C Strings.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Any_1a3288fa1f66a6762bfafb417ddcde4a5b" href="#">+ assign</a></span>: Any&amp; (const char* rhs);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Assignment operator for convenience.<br /></b><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist"><span class="keyword">template</span>&lt;typename T &gt;</div>
 <span class="method"><a name="classYuni_1_1Any_1ae33f7cdacc7e407b3889efd159d27b2f" href="#">+ operator=</a></span>: Any&amp; (T const&amp; rhs);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Resets the Any to an empty state.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Any_1a5b1f79c193ec6484496c98f631f04067" href="#">+ reset</a></span>: void ();
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Information methods <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Returns the type_info of the held variable.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Any_1a260bd08d99e95198f9db279374a8fb41" href="#">+ type</a></span>: const std::type_info&amp; () <span class="keyword">const</span>;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">Can be used to compare with typeid(MyType).<br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Returns true if the object is of the specified type.<br /></b><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist"><span class="keyword">template</span>&lt;typename T &gt;</div>
 <span class="method"><a name="classYuni_1_1Any_1a5cab251e98cf150ca859eb7ac97f342c" href="#">+ is</a></span>: bool () <span class="keyword">const</span>;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Checks if the any has been assigned a value.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Any_1ae5fcb59f6241b078490970821f0105fd" href="#">+ empty</a></span>: bool () <span class="keyword">const</span>;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div><code>return</code>  True if the any contains no value.<br /></div><br />
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Retrieval methods <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Casts the Any to the T type. Throws a Yuni::Exceptions::BadCast if not possible.<br /></b><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist"><span class="keyword">template</span>&lt;typename T &gt;</div>
 <span class="method"><a name="classYuni_1_1Any_1aab522bd0bb02fb1c9eef540081683d46" href="#">+ to</a></span>: const T&amp; () <span class="keyword">const</span>;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div><code>return</code>  A T object.<br /></div><br />
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Swaps an any with another.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Any_1a375a5266fedda315adde0dd539ae8c00" href="#">+ Swap</a></span>: <span class="keyword">static</span> void (Any&amp; one, Any&amp; other);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> one</code> Any 1<br /></li><li><code> other</code> Any 2<br /></li></ul><br />
</div>
</td></tr>
</table>


