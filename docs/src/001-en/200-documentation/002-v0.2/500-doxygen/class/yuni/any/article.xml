<title>Any</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2>An Any is a container for a value of any type. This is a relatively classic, yet (i hope) fast implementation of an Any type</h2>
<h3>Public function</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4>Constructors</h4></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Any</a></span>(const T&amp; source)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Any</a></span>(const char* source)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Any</a></span>(char* source)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Any</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Any</a></span>(const Any&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#"><b> ~ </b>Any</a></span>()</code></td></tr>
<tr><td></td><td><br /><h4>Alteration methods</h4></td></tr>
<tr><td class="doxygen_index"><code>Any&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">assign</a></span>(const Any&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Any&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">assign</a></span>(const T&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Any&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">assign</a></span>(const char* rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Any&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator=</a></span>(T const&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">reset</a></span>()</code></td></tr>
<tr><td></td><td><br /><h4>Information methods</h4></td></tr>
<tr><td class="doxygen_index"><code>const std::type_info&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">type</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">is</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">empty</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td></td><td><br /><h4>Retrieval methods</h4></td></tr>
<tr><td class="doxygen_index"><code>const T&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">to</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td></td><td><br /><h4></h4></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">static</span> void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Swap</a></span>(Any&amp; one, Any&amp; other)</code></td></tr>
</table></div>

<h2>Detailed Description</h2><div>How to use:<source type="cpp">  Any  v(3.14);

  if  (v.is&lt; double &gt;())
    //  Be  sure  to  check  the  type  before,  otherwise  Any  will  throw  an  exception.
    std::cout  &lt;&lt;  v.cast&lt; double &gt;();
</source>
<br /></div>
<table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructors <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Copy of an existing variable.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="Any_33731319844517_tmpl"><span class="keyword">template</span>&lt;typename T &gt;</div>
 <span class="method"><a href="#">+ Any</a></span>:  (const T&amp; source);
</code>
</div></td></tr><tr id="Any_33731319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Copy of an existing const C string.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ Any</a></span>:  (const char* source);
</code>
</div></td></tr><tr id="Any_33751319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Copy of an existing const C string.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ Any</a></span>:  (char* source);
</code>
</div></td></tr><tr id="Any_33771319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Empty constructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ Any</a></span>:  ();
</code>
</div></td></tr><tr id="Any_33791319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Copy constructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ Any</a></span>:  (const Any&amp; rhs);
</code>
</div></td></tr><tr id="Any_33811319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Destructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ <b> ~ </b>Any</a></span>:  ();
</code>
</div></td></tr><tr id="~Any_33821319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Alteration methods <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Assignment from another Any .<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ assign</a></span>: Any&amp; (const Any&amp; rhs);
</code>
</div></td></tr><tr id="assign_33831319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> rhs</code> The Any to assign from<br /></li></ul><div><code>return</code>  This Any<br /></div><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Assignment from any object.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="assign_33851319844517_tmpl"><span class="keyword">template</span>&lt;typename T &gt;</div>
 <span class="method"><a href="#">+ assign</a></span>: Any&amp; (const T&amp; rhs);
</code>
</div></td></tr><tr id="assign_33851319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> rhs</code> The object to assign from<br /></li></ul><div><code>return</code>  This Any<br /></div><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Specialized assign for C Strings.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ assign</a></span>: Any&amp; (const char* rhs);
</code>
</div></td></tr><tr id="assign_33861319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Assignment operator for convenience.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="operator=_33871319844517_tmpl"><span class="keyword">template</span>&lt;typename T &gt;</div>
 <span class="method"><a href="#">+ operator=</a></span>: Any&amp; (T const&amp; rhs);
</code>
</div></td></tr><tr id="operator=_33871319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Resets the Any to an empty state.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ reset</a></span>: void ();
</code>
</div></td></tr><tr id="reset_33901319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Information methods <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Returns the type_info of the held variable.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ type</a></span>: const std::type_info&amp; () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="type_33921319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">Can be used to compare with typeid(MyType).<br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Returns true if the object is of the specified type.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="is_33931319844517_tmpl"><span class="keyword">template</span>&lt;typename T &gt;</div>
 <span class="method"><a href="#">+ is</a></span>: bool () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="is_33931319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Checks if the any has been assigned a value.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ empty</a></span>: bool () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="empty_33951319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div><code>return</code>  True if the any contains no value.<br /></div><br />
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Retrieval methods <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Casts the Any to the T type. Throws a Yuni::Exceptions::BadCast if not possible.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="to_33981319844517_tmpl"><span class="keyword">template</span>&lt;typename T &gt;</div>
 <span class="method"><a href="#">+ to</a></span>: const T&amp; () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="to_33981319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div><code>return</code>  A T object.<br /></div><br />
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Swaps an any with another.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ Swap</a></span>: <span class="keyword">static</span> void (Any&amp; one, Any&amp; other);
</code>
</div></td></tr><tr id="Swap_34001319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> one</code> Any 1<br /></li><li><code> other</code> Any 2<br /></li></ul><br />
</div>
</td></tr>
</table>


