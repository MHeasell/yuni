<title>Iterator</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2><code>Iterator</code></h2><table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td></td><td class="doxnone">A non-zero value if the iterator can go forward. A non-zero value if the iterator can go backward.<div class="doxygen_name_spacer"></div>
<code><i>(unmanaged tag: 0)</i></code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The type of the orignal object.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">value_type</a></span>: <span class="keyword">typedef</span> String;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">An unsigned integral type.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">uint64ype</a></span>: <span class="keyword">typedef</span> uint64;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">A signed integral type.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">difference_type</a></span>: <span class="keyword">typedef</span> sint64;</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">isFile</a></span>: bool () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">isFolder</a></span>: bool () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">filename</a></span>: const String&amp; () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">parent</a></span>: const String&amp; () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">size</a></span>: uint64 () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">valid</a></span>: bool () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">operator!</a></span>: bool () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Protected <code class="doxygen_visibility">Protected</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">Iterator</a></span>:  ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code><div id="Iterator_61201319137233_templ" style="display:none"><span class="keyword">template</span>&lt;class StringT &gt;</div>
 <span class="method"><a href="#">Iterator</a></span>:  (const StringT&amp; directory);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">Iterator</a></span>:  (const NullIterator&amp; );
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">Iterator</a></span>:  (const Iterator&amp; copy);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#"><b> ~ </b>Iterator</a></span>:  ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">forward</a></span>: void ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">forward</a></span>: void (difference_type n);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code><div id="reset_61261319137233_templ" style="display:none"><span class="keyword">template</span>&lt;class ModelT &gt;</div>
 <span class="method"><a href="#">reset</a></span>: void (const ModelT&amp; model);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code><div id="distance_61271319137233_templ" style="display:none"><span class="keyword">template</span>&lt;class ModelT &gt;</div>
 <span class="method"><a href="#">distance</a></span>: difference_type (const ModelT&amp; ) <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">equals</a></span>: bool (const NullIterator&amp; ) <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code><div id="equals_61291319137233_templ" style="display:none"><span class="keyword">template</span>&lt;class ModelT &gt;</div>
 <span class="method"><a href="#">equals</a></span>: bool (const ModelT&amp; model) <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">operator*</a></span>: const String&amp; ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">operator-&gt;</a></span>: const String* ();
</code>
</td></tr>
</table>


