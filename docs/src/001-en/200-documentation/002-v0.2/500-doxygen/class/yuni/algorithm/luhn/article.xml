<title>Luhn</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2>The Luhn algorithms (or Luhn formula)</h2>
<h3>Public function</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4></h4></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">static</span> bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Algorithm_1_1Luhn_1abdee21eae87134062f9617e99acec06e">IsValidCreditCardNumber</a></span>(const String&amp; s)</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">static</span> int </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Algorithm_1_1Luhn_1acb7898c5086206dfe8ef557e0c66769e">Mod10</a></span>(const String&amp; s)</code></td></tr>
</table></div>

<h2>Detailed Description</h2><div>The Luhn algorithm is a simple checksum formula used to validate a variety of identification numbers, such as credit card numbers. It was created by IBM scientist Hans Peter Luhn and described in U.S. Patent 2,950,048, filed on January 6, 1954, and granted on August 23, 1960.<br /> it was designed to protect against accidental errors, not malicious attacks and it is a simple method for distinguishing valid numbers from collections of random digits.<br /></div><div style="margin-top:3em;border:1px solid #aaa;border-bottom-style:none;border-left-style:none;border-right-style:none"></div>
<table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Checks whether a string of digits is a valid credit card number.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Algorithm_1_1Luhn_1abdee21eae87134062f9617e99acec06e" href="#">+ IsValidCreditCardNumber</a></span>: <span class="keyword">static</span> bool (const String&amp; s);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">This method uses the `Luhn Mod 10` algorithm.<source type="cpp">  //  A  valid  credit  card  number
  std::cout  &lt;&lt;  Yuni::Algorithm::Luhn::IsValidCreditCardNumber ( "49927398716" )  &lt;&lt;  std::endl;
</source>
<br /><div class="doxygen_params">Parameters :</div><ul><li><code> s</code> A string with an arbitrary length (&gt; 1, returns false otherwise)<br /></li></ul><div><code>return</code>  True if the string is a valid credit card number, False otherwise<br /></div><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Generate the check digit of a string using the `Luhn mode 10` algorithm.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Algorithm_1_1Luhn_1acb7898c5086206dfe8ef557e0c66769e" href="#">+ Mod10</a></span>: <span class="keyword">static</span> int (const String&amp; s);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> s</code> A string with an arbitrary length (&gt; 1, error otherwise)<br /></li></ul><div><code>return</code>  The check digit, -1 if an error has occured<br /></div><br />
</div>
</td></tr>
</table>


