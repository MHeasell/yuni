<title>Nullable</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2>A nullable value type</h2>
<h3>Public typedef</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4></h4></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">Type</a></span> : Static::Remove::Const&lt;T&gt;:: Type</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">AllocatorType</a></span> : Alloc</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">allocator_type</a></span> : Alloc</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">value_type</a></span> : Type</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">pointer</a></span> : Type*</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">const_pointer</a></span> : const Type*</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">reference</a></span> : T&amp;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">const_reference</a></span> : const T&amp;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">size_type</a></span> : AllocatorType::size_type</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">difference_type</a></span> : AllocatorType::difference_type</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">HolderType</a></span> : Private::NullableImpl::Holder&lt; Type, typeIsSmall&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">iterator</a></span> : iterator_base&lt;false&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">const_iterator</a></span> : iterator_base&lt;true&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">reverse_iterator</a></span> : iterator_base&lt;false&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">const_reverse_iterator</a></span> : iterator_base&lt;true&gt;</code></td></tr>
</table></div>

<h3>Public function</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4>Constructors</h4></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Nullable</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Nullable</a></span>(const Nullable&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Nullable</a></span>(Static::MoveConstructor&lt;Nullable&gt; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Nullable</a></span>(const Nullable&lt;T, Alloc1&gt;&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Nullable</a></span>(const U&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Nullable</a></span>(const_pointer v)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#"><b> ~ </b>Nullable</a></span>()</code></td></tr>
<tr><td></td><td><br /><h4>Iterators</h4></td></tr>
<tr><td class="doxygen_index"><code>iterator </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">begin</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>const_iterator </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">begin</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>iterator </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">end</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>const_iterator </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">end</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>reverse_iterator </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">rbegin</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>const_reverse_iterator </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">rbegin</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>reverse_iterator </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">rend</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>const_reverse_iterator </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">rend</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td></td><td><br /><h4>Value</h4></td></tr>
<tr><td class="doxygen_index"><code>Type </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">value</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>Type </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">value</a></span>(const U&amp; nullValue) <span class="keyword">const</span></code></td></tr>
<tr><td></td><td><br /><h4>Operators</h4></td></tr>
<tr><td class="doxygen_index"><code>reference </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator*</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>reference </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator-&gt;</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>Nullable&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator=</a></span>(const Nullable&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Nullable&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator=</a></span>(const Nullable&lt;T, Alloc1&gt;&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Nullable&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator=</a></span>(const NullPtr&amp; )</code></td></tr>
<tr><td class="doxygen_index"><code>Nullable&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator=</a></span>(const_pointer rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Nullable&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator=</a></span>(const U&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Nullable&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator=</a></span>(void* const)</code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator==</a></span>(const Nullable&amp; rhs) <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator!=</a></span>(const Nullable&amp; rhs) <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator==</a></span>(const NullPtr&amp; ) <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator!=</a></span>(const NullPtr&amp; ) <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator&lt;</a></span>(const Nullable&amp; rhs) <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator!</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td></td><td><br /><h4>Cast-Operator</h4></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator Static::MoveConstructor&lt; Nullable &gt;</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator AutomaticConversion *</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator Type</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td></td><td><br /><h4></h4></td></tr>
<tr><td class="doxygen_index"><code>size_type </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">size</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">empty</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">null</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>reference </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator[]</a></span>(size_type n)</code></td></tr>
<tr><td class="doxygen_index"><code>const_reference </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator[]</a></span>(size_type n) <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>reference </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">front</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>reference </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">back</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>const_reference </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">front</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>const_reference </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">back</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">push_back</a></span>(const_reference rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">pop_back</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">swap</a></span>(Nullable&lt;T, Alloc1&gt;&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>iterator </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">insert</a></span>(iterator , const_reference x)</code></td></tr>
<tr><td class="doxygen_index"><code>iterator </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">erase</a></span>(iterator pos)</code></td></tr>
<tr><td class="doxygen_index"><code>iterator </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">erase</a></span>(iterator first, iterator last)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">clear</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">resize</a></span>(const size_type n, const T&amp; t)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">print</a></span>(S&amp; out, const U&amp; nullValue) <span class="keyword">const</span></code></td></tr>
<tr><td></td><td><br /><h4></h4></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">static</span> size_type </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">max_size</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">static</span> size_type </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">capacity</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">static</span> void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">reserve</a></span>(size_type N)</code></td></tr>
</table></div>

<h2>Detailed Description</h2><div>This class behaves like the original type, except it can take the special value `NULL`.<br /> It is safe to make operations (`+`, `+=`, `/`...) on this variable, even if equals to NULL (a default value will be used).<br /><source type="cpp">     Yuni::Nullable&lt;Yuni::String&gt;  s;
     std::cout  &lt;&lt;  "After  Init    :    s  =  "  &lt;&lt;  s  &lt;&lt;  std::endl;

     s  =  "foo" ;
     std::cout  &lt;&lt;  "After  Assign  :    s  =  "  &lt;&lt;  s  &lt;&lt;  std::endl;

     //  Reset  to  null
     s  =  nullptr ;
     std::cout  &lt;&lt;  "After  reset   :    s  =  "  &lt;&lt;  s  &lt;&lt;  std::endl;
</source>
<br /> This class is a STL compliant container. Consequently, this class can be used as it were a std::list or a std::vector, except that it can only contain a single value in any cases.<br /><div><b>note</b> :  Accessing to methods of the class T: you have to use the operator `-&gt;`.<source type="cpp">  Yuni::Nullable&lt;Yuni::String&gt;  s;
  std::cout  &lt;&lt;  s-&gt; size ()  &lt;&lt;  std::endl;   //  will  display  0
  s  =  "hello  world" ;
  std::cout  &lt;&lt;  s-&gt; size ()  &lt;&lt;  std::endl;   //  will  display  11
</source>
<br /> NULL : `NULL` is defined as `0`, which is an int and not a pointer. Consequently there is no way that code compiles without warnings, or does what you expect :<source type="cpp">  Yuni::Nullable&lt;float&gt;  d;
  d  =  NULL;
</source>
 Use instead the sepcial value `nullptr` or the method `clear()` :<source type="cpp">  d  =  nullptr ;
  or
  d. clear ();
</source>
<br /></div><div class="doxygen_params">Parameters :</div><ul><li><code> T</code> The type<br /></li><li><code> Alloc</code> An allocator. Actually not used but here for compatibility with the STL<br /></li></ul><br /></div>
<table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_enum"></td><td class="doxnone"><div class="doxygen_brief"><code><i>(unmanaged tag: 4)</i></code>
</div></td></tr><tr id="@218typeIsSmall_19581319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">The type of object, T, stored in the container.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ Type</a></span>: <span class="keyword">typedef</span> Static::Remove::Const&lt;T&gt;:: Type;
</code>
</div></td></tr><tr id="Type_19591319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Allocator.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ AllocatorType</a></span>: <span class="keyword">typedef</span> Alloc;
</code>
</div></td></tr><tr id="AllocatorType_19601319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Allocator.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ allocator_type</a></span>: <span class="keyword">typedef</span> Alloc;
</code>
</div></td></tr><tr id="allocator_type_19611319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">The type of object, T, stored in the container.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ value_type</a></span>: <span class="keyword">typedef</span> Type;
</code>
</div></td></tr><tr id="value_type_19621319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Pointer to T.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ pointer</a></span>: <span class="keyword">typedef</span> Type*;
</code>
</div></td></tr><tr id="pointer_19631319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Pointer to T.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ const_pointer</a></span>: <span class="keyword">typedef</span> const Type*;
</code>
</div></td></tr><tr id="const_pointer_19641319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">A reference.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ reference</a></span>: <span class="keyword">typedef</span> T&amp;;
</code>
</div></td></tr><tr id="reference_19651319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">A const reference.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ const_reference</a></span>: <span class="keyword">typedef</span> const T&amp;;
</code>
</div></td></tr><tr id="const_reference_19661319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">An unsigned integral type.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ size_type</a></span>: <span class="keyword">typedef</span> AllocatorType::size_type;
</code>
</div></td></tr><tr id="size_type_19671319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">A signed integral type.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ difference_type</a></span>: <span class="keyword">typedef</span> AllocatorType::difference_type;
</code>
</div></td></tr><tr id="difference_type_19681319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">The most suitable holder for T.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ HolderType</a></span>: <span class="keyword">typedef</span> Private::NullableImpl::Holder&lt; Type, typeIsSmall&gt;;
</code>
</div></td></tr><tr id="HolderType_19691319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Iterator .<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ iterator</a></span>: <span class="keyword">typedef</span> iterator_base&lt;false&gt;;
</code>
</div></td></tr><tr id="iterator_19701319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Const iterator.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ const_iterator</a></span>: <span class="keyword">typedef</span> iterator_base&lt;true&gt;;
</code>
</div></td></tr><tr id="const_iterator_19711319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Reverse iterator.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ reverse_iterator</a></span>: <span class="keyword">typedef</span> iterator_base&lt;false&gt;;
</code>
</div></td></tr><tr id="reverse_iterator_19721319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Const Reverse iterator.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ const_reverse_iterator</a></span>: <span class="keyword">typedef</span> iterator_base&lt;true&gt;;
</code>
</div></td></tr><tr id="const_reverse_iterator_19731319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructors <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Default constructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ Nullable</a></span>:  ();
</code>
</div></td></tr><tr id="Nullable_19741319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Copy constructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ Nullable</a></span>:  (const Nullable&amp; rhs);
</code>
</div></td></tr><tr id="Nullable_19751319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Move constructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ Nullable</a></span>:  (Static::MoveConstructor&lt;Nullable&gt; rhs);
</code>
</div></td></tr><tr id="Nullable_19761319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Copy constructor.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="Nullable_19771319844517_tmpl"><span class="keyword">template</span>&lt;class Alloc1 &gt;</div>
 <span class="method"><a href="#">+ Nullable</a></span>:  (const Nullable&lt;T, Alloc1&gt;&amp; rhs);
</code>
</div></td></tr><tr id="Nullable_19771319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Constructor with a default value.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="Nullable_19781319844517_tmpl"><span class="keyword">template</span>&lt;typename U &gt;</div>
 <span class="method"><a href="#">+ Nullable</a></span>:  (const U&amp; rhs);
</code>
</div></td></tr><tr id="Nullable_19781319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Constructor with a default value.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ Nullable</a></span>:  (const_pointer v);
</code>
</div></td></tr><tr id="Nullable_19791319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Destructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ <b> ~ </b>Nullable</a></span>:  ();
</code>
</div></td></tr><tr id="~Nullable_19801319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Iterators <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Returns an iterator pointing to the beginning of the vector.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ begin</a></span>: iterator ();
</code>
</div></td></tr><tr id="begin_19811319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Returns a const_iterator pointing to the beginning of the vector.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ begin</a></span>: const_iterator () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="begin_19821319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Returns a iterator pointing to the end of the vector.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ end</a></span>: iterator ();
</code>
</div></td></tr><tr id="end_19831319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Returns a const_iterator pointing to the end of the vector.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ end</a></span>: const_iterator () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="end_19841319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Returns a reverse_iterator pointing to the beginning of the reversed vector.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ rbegin</a></span>: reverse_iterator ();
</code>
</div></td></tr><tr id="rbegin_19851319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Returns a const_reverse_iterator pointing to the beginning of the reversed vector.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ rbegin</a></span>: const_reverse_iterator () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="rbegin_19861319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Returns a reverse_iterator pointing to the end of the reversed vector.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ rend</a></span>: reverse_iterator ();
</code>
</div></td></tr><tr id="rend_19871319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Returns a const_reverse_iterator pointing to the end of the reversed vector.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ rend</a></span>: const_reverse_iterator () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="rend_19881319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Value <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get the current value, or a default one if null.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ value</a></span>: Type () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="value_19891319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get the current value, or a default one if null.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="value_19901319844517_tmpl"><span class="keyword">template</span>&lt;class U &gt;</div>
 <span class="method"><a href="#">+ value</a></span>: Type (const U&amp; nullValue) <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="value_19901319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> nullValue</code> The value to use the value is equal to null<br /></li></ul><source type="cpp">  Yuni::Nullable&lt;Yuni::String&gt;  cellValue;  //  Null  by  default
  Yuni::String  strToDisplay  =  cellValue. value ( "(undef)" );
  std::cout  &lt;&lt;  strToDisplay  &lt;&lt;  std::endl;  //  will  display  `(undef)`
</source>
<br />
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Operators <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get a reference to the inner variable.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator*</a></span>: reference ();
</code>
</div></td></tr><tr id="operator*_19911319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">A default value will be created if equals to null<br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get a reference to the inner variable.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator-&gt;</a></span>: reference ();
</code>
</div></td></tr><tr id="operator_>_19921319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">A default value will be created if equals to null<br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Operator =.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator=</a></span>: Nullable&amp; (const Nullable&amp; rhs);
</code>
</div></td></tr><tr id="operator=_19931319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Operator =.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="operator=_19941319844517_tmpl"><span class="keyword">template</span>&lt;class Alloc1 &gt;</div>
 <span class="method"><a href="#">+ operator=</a></span>: Nullable&amp; (const Nullable&lt;T, Alloc1&gt;&amp; rhs);
</code>
</div></td></tr><tr id="operator=_19941319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Operator =.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator=</a></span>: Nullable&amp; (const NullPtr&amp; );
</code>
</div></td></tr><tr id="operator=_19951319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Operator =.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator=</a></span>: Nullable&amp; (const_pointer rhs);
</code>
</div></td></tr><tr id="operator=_19961319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Operator =.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="operator=_19971319844517_tmpl"><span class="keyword">template</span>&lt;class U &gt;</div>
 <span class="method"><a href="#">+ operator=</a></span>: Nullable&amp; (const U&amp; rhs);
</code>
</div></td></tr><tr id="operator=_19971319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Operator =.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator=</a></span>: Nullable&amp; (void* const);
</code>
</div></td></tr><tr id="operator=_19981319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">The comparison operator.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator==</a></span>: bool (const Nullable&amp; rhs) <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="operator==_19991319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">The comparison operator.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator!=</a></span>: bool (const Nullable&amp; rhs) <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="operator!=_20001319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">The comparison operator.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator==</a></span>: bool (const NullPtr&amp; ) <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="operator==_20011319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">The comparison operator.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator!=</a></span>: bool (const NullPtr&amp; ) <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="operator!=_20021319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get a reference to the inner variable.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator&lt;</a></span>: bool (const Nullable&amp; rhs) <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="operator<_20031319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">A default value will be created if equals to null<br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">The operator ! (if (!value) ...)<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator!</a></span>: bool () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="operator!_20041319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Cast-Operator <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Cast-Operator.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator Static::MoveConstructor&lt; Nullable &gt;</a></span>:  ();
</code>
</div></td></tr><tr id="operator Static::MoveConstructor< Nullable >_20051319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Cast-Operator for `if (a) ...`.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator AutomaticConversion *</a></span>:  () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="operator AutomaticConversion *_20061319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Cast-Operator.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator Type</a></span>:  () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="operator Type_20071319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Returns the size of the container (actually 0 or 1)<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ size</a></span>: size_type () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="size_20081319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Test if the container is empty.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ empty</a></span>: bool () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="empty_20091319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Test if the variable is null.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ null</a></span>: bool () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="null_20101319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Returns the n'th element.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator[]</a></span>: reference (size_type n);
</code>
</div></td></tr><tr id="operator[]_20111319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Returns the n'th element.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator[]</a></span>: const_reference (size_type n) <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="operator[]_20121319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><code> <span class="method"><a href="#">+ front</a></span>: reference ();
</code>
</div></td></tr><tr id="front_20131319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><code> <span class="method"><a href="#">+ back</a></span>: reference ();
</code>
</div></td></tr><tr id="back_20141319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><code> <span class="method"><a href="#">+ front</a></span>: const_reference () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="front_20151319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><code> <span class="method"><a href="#">+ back</a></span>: const_reference () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="back_20161319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Insert a new element at the end.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ push_back</a></span>: void (const_reference rhs);
</code>
</div></td></tr><tr id="push_back_20171319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">The old value will be replaced by this new one<br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Remove the last element (set the value to NULL)<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ pop_back</a></span>: void ();
</code>
</div></td></tr><tr id="pop_back_20181319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Swap the content with another nullable object.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="swap_20191319844517_tmpl"><span class="keyword">template</span>&lt;class Alloc1 &gt;</div>
 <span class="method"><a href="#">+ swap</a></span>: void (Nullable&lt;T, Alloc1&gt;&amp; rhs);
</code>
</div></td></tr><tr id="swap_20191319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><code> <span class="method"><a href="#">+ insert</a></span>: iterator (iterator , const_reference x);
</code>
</div></td></tr><tr id="insert_20201319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><code> <span class="method"><a href="#">+ erase</a></span>: iterator (iterator pos);
</code>
</div></td></tr><tr id="erase_20211319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><code> <span class="method"><a href="#">+ erase</a></span>: iterator (iterator first, iterator last);
</code>
</div></td></tr><tr id="erase_20221319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Set the value to NULL.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ clear</a></span>: void ();
</code>
</div></td></tr><tr id="clear_20231319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Inserts or erases elements at the end such that the size becomes n.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ resize</a></span>: void (const size_type n, const T&amp; t);
</code>
</div></td></tr><tr id="resize_20241319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Print the value to an stream.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="print_20251319844517_tmpl"><span class="keyword">template</span>&lt;class S , class U &gt;</div>
 <span class="method"><a href="#">+ print</a></span>: void (S&amp; out, const U&amp; nullValue) <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="print_20251319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">The value will be print to the ostream using the operator &lt;&lt;. If the value is null, `nullValue` will be used instead<source type="cpp">  Yuni::Nullable&lt;int&gt;  a;

  a  =  42;
  a. print (std::cout,  "(null)" );   //  will  print  `42`
  std::cout  &lt;&lt;  std::endl;

  a  =  nullptr ;
  a. print (std::cout,  "(null)" );   //  will  print  `(null)`
  std::cout  &lt;&lt;  std::endl;
</source>
<br />
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Returns the largest possible size of the container.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ max_size</a></span>: <span class="keyword">static</span> size_type ();
</code>
</div></td></tr><tr id="max_size_20261319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Returns the largest possible size of the container.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ capacity</a></span>: <span class="keyword">static</span> size_type ();
</code>
</div></td></tr><tr id="capacity_20271319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Reserve N elements.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ reserve</a></span>: <span class="keyword">static</span> void (size_type N);
</code>
</div></td></tr><tr id="reserve_20281319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">Do nothing. Available for compatibility reasons only (STL).<br />
</div>
</td></tr>
</table>


