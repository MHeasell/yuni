<title>ReferenceCounted</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2><code>ReferenceCounted</code></h2><table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructors <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Default constructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">ReferenceCounted</a></span>:  ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Copy constructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">ReferenceCounted</a></span>:  (const ReferenceCounted&amp; c);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Copy constructor for any king of template parameter.<div class="doxygen_name_spacer"></div>
<code><div id="ReferenceCounted_65661319137233_templ" style="display:none"><span class="keyword">template</span>&lt;typename U &gt;</div>
 <span class="method"><a href="#">ReferenceCounted</a></span>:  (const ReferenceCounted&lt;U&gt;&amp; c);
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td></td><td class="doxnone">Get if the ownership policy is destructive.<div class="doxygen_name_spacer"></div>
<code><i>(unmanaged tag: 0)</i></code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Initialization from a raw pointer.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">initFromRawPointer</a></span>: void (const T&amp; );
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Clone this object.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">clone</a></span>: T (const T&amp; rhs);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Release the reference.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">release</a></span>: bool (const T&amp; );
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">swapPointer</a></span>: void (ReferenceCounted&amp; rhs);
</code>
</td></tr>
</table>


