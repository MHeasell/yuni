<title>Button</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="class" />



<h2><code>Button</code></h2><table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Methods <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Resize the component.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">resize</a></span>: void (float width, float height);</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Accessors <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the class name (identifier for the type of component)<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">className</a></span>: const ClassName &amp; () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Set the class name (identifier for the type of component)<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">className</a></span>: void (ClassName<b>&amp;</b> );</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the unique Identifier for this component.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">id</a></span>: ID ();</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the width of the component.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">width</a></span>: float () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the height of the component.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">height</a></span>: float () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the position of the component.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">position</a></span>: Point2D &lt; float &gt; () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the size of the component.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">size</a></span>: void (float<b>&amp;</b> width, float<b>&amp;</b> height) <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the X position of the component.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">x</a></span>: float () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the Y position of the component.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">y</a></span>: float () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Pointer management <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">addRef</a></span>: void ();</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">release</a></span>: void ();</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructor &amp; Destructor <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Empty constructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">Button</a></span>:  ();</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Constructor with parent.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">Button</a></span>:  (const IControl::Ptr<b>&amp;</b> parent);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Constructor with caption.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">Button</a></span>:  (const StringT<b>&amp;</b> caption);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Constructor with parent and caption.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">Button</a></span>:  (const IControl::Ptr<b>&amp;</b> parent, const StringT<b>&amp;</b> caption);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Constructor with dimensions.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">Button</a></span>:  (const StringT<b>&amp;</b> caption, float width, float height);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Constructor with parent and dimensions.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">Button</a></span>:  (const IControl::Ptr<b>&amp;</b> parent, const StringT<b>&amp;</b> caption, float width, float height);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Full constructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">Button</a></span>:  (const StringT<b>&amp;</b> caption, float x, float y, float width, float height);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Full constructor with parent.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">Button</a></span>:  (const IControl::Ptr<b>&amp;</b> parent, const StringT<b>&amp;</b> caption, float x, float y, float width, float height);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Full constructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">Button</a></span>:  (const StringT<b>&amp;</b> caption, Point2D &lt; T &gt;<b>&amp;</b> pos, float width, float height);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Full constructor with parent.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">Button</a></span>:  (const IControl::Ptr<b>&amp;</b> parent, const StringT<b>&amp;</b> caption, Point2D &lt; T &gt;<b>&amp;</b> pos, float width, float height);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Virtual destructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#"><b> ~ </b>Button</a></span>:  ();</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Caption <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the caption of the button.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">caption</a></span>: String () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Set the caption.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">caption</a></span>: void (const StringT<b>&amp;</b> value);</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public
 <code class="doxygen_visibility">Public
</code></h3>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Smart pointer.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">Ptr</a></span>: <span class="keyword">typedef</span> IComponent::SmartPtrInfo &lt; Button &gt;::Type;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Vector of controls.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">Vector</a></span>: <span class="keyword">typedef</span> std::vector&lt; Ptr &gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Threading Policy .<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">ThreadingPolicy</a></span>: <span class="keyword">typedef</span> IComponent::ThreadingPolicy;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Map of controls.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">Map</a></span>: <span class="keyword">typedef</span> std::map&lt; IComponent::ID , Ptr &gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Sorted (by depth in UI tree) map of controls.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">DepthSortedMap</a></span>: <span class="keyword">typedef</span> std::map&lt; size_t, Map &gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Ancestor type.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">EventObserverType</a></span>: <span class="keyword">typedef</span> IEventObserver &lt; IComponent , Policy::ObjectLevelLockable &gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">A class name is a string tag representing a type of component.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">ClassName</a></span>: <span class="keyword">typedef</span> CString &lt; 64, false, false &gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Unique local identifier.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">ID</a></span>: <span class="keyword">typedef</span> Yuni::UI::ID::Type;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Type of the Event observer.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">IEventObserverType</a></span>: <span class="keyword">typedef</span> IEventObserver &lt; IComponent , Policy::ObjectLevelLockable &gt;;</code>
</td></tr>
<tr><td></td><td class="doxnone">Get if this policy is thread-safe.<div class="doxygen_name_spacer"></div>
<code><i>(unmanaged tag: 0)</i></code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Protected
 <code class="doxygen_visibility">Protected
</code></h3>
</td></tr>
<tr><td class="doxygen_var"></td><td class="doxnone">Text caption on the button.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">pCaption</a></span>: String;</code>
</td></tr>
<tr><td class="doxygen_var"></td><td class="doxnone">Parent control. Null by default.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">pParent</a></span>: IControlContainer *;</code>
</td></tr>
<tr><td class="doxygen_var"></td><td class="doxnone">Children controls.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">pChildren</a></span>: IControl::Map;</code>
</td></tr>
<tr><td class="doxygen_var"></td><td class="doxnone">Depth in the UI tree : 0 if no parent, parent level + 1 otherwise.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">pDepth</a></span>: unsigned int;</code>
</td></tr>
<tr><td class="doxygen_var"></td><td class="doxnone">Unique local identifier.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">pLocalID</a></span>: const ID;</code>
</td></tr>
<tr><td class="doxygen_var"></td><td class="doxnone">Class name for this component (type of component)<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">pClass</a></span>: ClassName;</code>
</td></tr>
<tr><td class="doxygen_var"></td><td class="doxnone">Adapter for Virtual UI &lt;-&gt; UI Representation communication.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">pAdapter</a></span>: Adapter::ForVirtual *;</code>
</td></tr>
<tr><td class="doxygen_var"></td><td class="doxnone">Position of the component relative to its parent.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">pPosition</a></span>: Point2D &lt; float &gt;;</code>
</td></tr>
<tr><td class="doxygen_var"></td><td class="doxnone">Width of the component.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">pWidth</a></span>: float;</code>
</td></tr>
<tr><td class="doxygen_var"></td><td class="doxnone">Height of the component.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">pHeight</a></span>: float;</code>
</td></tr>
<tr><td class="doxygen_var"></td><td class="doxnone">Mutex .<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">pMutex</a></span>: Mutex;</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public
 <code class="doxygen_visibility">Public
</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Ask the control to update its local representation.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">update</a></span>: void () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the parent.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">parent</a></span>: IControl::Ptr () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Set the parent.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">parent</a></span>: void (IControl::Ptr newParent);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the children.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">children</a></span>: IControl::Map () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Is there a parent ?<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">hasParent</a></span>: bool () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Depth in the UI tree, 0 if root.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">depth</a></span>: unsigned int () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Catch the focus.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">focus</a></span>: void ();</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Enable / disable the control.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">enabled</a></span>: void (bool e);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get if the control is enabled.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">enabled</a></span>: bool () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">visible</a></span>: void (bool e);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get if the control is visible.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">visible</a></span>: bool () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Protected
 <code class="doxygen_visibility">Protected
</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Set the parent (without locking)<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">parentWL</a></span>: void (const IControl::Ptr<b>&amp;</b> newParent);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Detach from the tree.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">detachWL</a></span>: void ();</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Add a child.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">addChildWL</a></span>: void (const IControl::Ptr<b>&amp;</b> child);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Remove a child.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">removeChildWL</a></span>: bool (const IControl::Ptr<b>&amp;</b> child);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Update the given component's local representation.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">updateComponentWL</a></span>: void (const IComponent::ID<b>&amp;</b> componentID) <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Protected resize, without locks.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">resizeWL</a></span>: void (float<b>&amp;</b> newWidth, float<b>&amp;</b> newHeight);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Destroy all existing and future bound events.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">destroyBoundEvents</a></span>: void ();</code>
</td></tr>
</table>


