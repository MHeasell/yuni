<title>Window</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2><code>Window</code></h2><table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Methods <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Resize the component.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">resize</a></span>: void (float width, float height);
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Accessors <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the class name (identifier for the type of component)<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">className</a></span>: const ClassName&amp; () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Set the class name (identifier for the type of component)<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">className</a></span>: void (ClassName&amp; );
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the unique Identifier for this component.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">id</a></span>: ID ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the width of the component.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">width</a></span>: float () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the height of the component.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">height</a></span>: float () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the position of the component.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">position</a></span>: Point2D&lt;float&gt; () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the size of the component.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">size</a></span>: void (float&amp; width, float&amp; height) <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the X position of the component.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">x</a></span>: float () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the Y position of the component.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">y</a></span>: float () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Pointer management <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">addRef</a></span>: void ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">release</a></span>: void ();
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Add / remove children <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">add</a></span>: void (const IControl::Ptr&amp; child);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">operator+=</a></span>: IControlContainer&amp; (const IControl::Ptr&amp; child);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">operator&lt;&lt;</a></span>: IControlContainer&amp; (const IControl::Ptr&amp; child);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">remove</a></span>: bool (IControl::ID child);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">remove</a></span>: bool (const IControl::Ptr&amp; child);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">operator-=</a></span>: IControlContainer&amp; (IComponent::ID id);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">operator-=</a></span>: IControlContainer&amp; (const IControl::Ptr&amp; child);
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Methods <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Add a child.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">addChildWL</a></span>: void (const IControl::Ptr&amp; child);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Remove a child.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">removeChildWL</a></span>: bool (IComponent::ID childID);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Resize the window.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">removeChildWL</a></span>: bool (const IControl::Ptr&amp; child);
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructor &amp; Destructor <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Short constructor.<div class="doxygen_name_spacer"></div>
<code><div id="Window_49781319137233_templ" style="display:none"><span class="keyword">template</span>&lt;class StringT &gt;</div>
 <span class="method"><a href="#">Window</a></span>:  (const StringT&amp; title);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Constructor with dimensions.<div class="doxygen_name_spacer"></div>
<code><div id="Window_49791319137233_templ" style="display:none"><span class="keyword">template</span>&lt;class StringT &gt;</div>
 <span class="method"><a href="#">Window</a></span>:  (const StringT&amp; title, float width, float height);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Constructor with start position coordinates.<div class="doxygen_name_spacer"></div>
<code><div id="Window_49801319137233_templ" style="display:none"><span class="keyword">template</span>&lt;class StringT &gt;</div>
 <span class="method"><a href="#">Window</a></span>:  (const StringT&amp; title, float x, float y, float width, float height);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Constructor with start position as a point.<div class="doxygen_name_spacer"></div>
<code><div id="Window_49811319137233_templ" style="display:none"><span class="keyword">template</span>&lt;class StringT , class T &gt;</div>
 <span class="method"><a href="#">Window</a></span>:  (const StringT&amp; title, const Point2D&lt;T&gt;&amp; pos, float width, float height);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Virtual destructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#"><b> ~ </b>Window</a></span>:  ();
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Methods <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Show the window.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">show</a></span>: void ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Hide the window.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">hide</a></span>: void ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Close the window, release everything.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">close</a></span>: void ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get whether the window is in the process of closing.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">closing</a></span>: bool () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Title of the Window <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the Title of the window.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">title</a></span>: String () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Set the title of the window.<div class="doxygen_name_spacer"></div>
<code><div id="title_49881319137233_templ" style="display:none"><span class="keyword">template</span>&lt;class StringT &gt;</div>
 <span class="method"><a href="#">title</a></span>: void (const StringT&amp; newTitle);
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Smart pointer, inherited from the ancestor.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">Ptr</a></span>: <span class="keyword">typedef</span> IComponent::SmartPtrInfo&lt;Window&gt;::Type;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Vector of controls.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">Vector</a></span>: <span class="keyword">typedef</span> std::vector&lt; Ptr&gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Map of controls.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">Map</a></span>: <span class="keyword">typedef</span> std::map&lt; IComponent::ID, Ptr&gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Threading Policy .<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">ThreadingPolicy</a></span>: <span class="keyword">typedef</span> IComponent::ThreadingPolicy;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Sorted (by depth in UI tree) map of controls.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">DepthSortedMap</a></span>: <span class="keyword">typedef</span> std::map&lt; size_t, Map&gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Ancestor type.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">EventObserverType</a></span>: <span class="keyword">typedef</span> IEventObserver&lt;IComponent, Policy::ObjectLevelLockable&gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">A class name is a string tag representing a type of component.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">ClassName</a></span>: <span class="keyword">typedef</span> CString&lt;64, false, false&gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Unique local identifier.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">ID</a></span>: <span class="keyword">typedef</span> Yuni::UI::ID::Type;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Type of the Event observer.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">IEventObserverType</a></span>: <span class="keyword">typedef</span> IEventObserver&lt;IComponent, Policy::ObjectLevelLockable&gt;;</code>
</td></tr>
<tr><td></td><td class="doxnone">Get if this policy is thread-safe.<div class="doxygen_name_spacer"></div>
<code><i>(unmanaged tag: 0)</i></code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td></td><td class="doxnone">Friend: required for access to events.<div class="doxygen_name_spacer"></div>
<code><i>(unmanaged tag: 0)</i></code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Ask the control to update its local representation.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">update</a></span>: void () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the parent.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">parent</a></span>: IControl::Ptr () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Set the parent.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">parent</a></span>: void (IControl::Ptr newParent);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get the children.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">children</a></span>: IControl::Map () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Is there a parent ?<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">hasParent</a></span>: bool () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Depth in the UI tree, 0 if root.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">depth</a></span>: unsigned int () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Catch the focus.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">focus</a></span>: void ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Enable / disable the control.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">enabled</a></span>: void (bool e);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get if the control is enabled.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">enabled</a></span>: bool () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">visible</a></span>: void (bool e);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get if the control is visible.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">visible</a></span>: bool () <span class="keyword">const</span>;
</code>
</td></tr>
</table>


