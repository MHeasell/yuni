<title>Triangle</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2>A triangle is a 3-sided polygon The triangle is the base element for all meshes It knows its edges, and its vertices</h2>
<h3>Public typedef</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4></h4></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">Ptr</a></span> : SmartPtr&lt;Triangle&gt;</code></td></tr>
</table></div>

<h3>Public function</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4>Constructors</h4></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Triangle</a></span>(const Vertex&amp; v1, const Vertex&amp; v2, const Vertex&amp; v3)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Triangle</a></span>(const Triangle&amp; t)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#"><b> ~ </b>Triangle</a></span>()</code></td></tr>
<tr><td></td><td><br /><h4>Accessors</h4></td></tr>
<tr><td class="doxygen_index"><code>const Vertex&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">vertex1</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>const Vertex&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">vertex2</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>const Vertex&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">vertex3</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>const Vector3D&lt;float&gt;&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">normal</a></span>()</code></td></tr>
<tr><td></td><td><br /><h4></h4></td></tr>
<tr><td class="doxygen_index"><code>std::ostream&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">print</a></span>(std::ostream&amp; out) <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>std::ostream&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">glPrint</a></span>(std::ostream&amp; out) <span class="keyword">const</span></code></td></tr>
</table></div>

<h2>Detailed Description</h2><table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief"><code><span class="method"><a href="#">+ Ptr</a></span>: <span class="keyword">typedef</span> SmartPtr&lt;Triangle&gt;;
</code>
</div></td></tr><tr id="Ptr_21781319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructors <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Copy constructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ Triangle</a></span>:  (const Vertex&amp; v1, const Vertex&amp; v2, const Vertex&amp; v3);
</code>
</div></td></tr><tr id="Triangle_21791319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Copy constructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ Triangle</a></span>:  (const Triangle&amp; t);
</code>
</div></td></tr><tr id="Triangle_21801319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Destructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ <b> ~ </b>Triangle</a></span>:  ();
</code>
</div></td></tr><tr id="~Triangle_21811319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Accessors <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get the normal (unit) vector to this triangle.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ vertex1</a></span>: const Vertex&amp; () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="vertex1_21821319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get the normal (unit) vector to this triangle.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ vertex2</a></span>: const Vertex&amp; () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="vertex2_21831319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get the normal (unit) vector to this triangle.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ vertex3</a></span>: const Vertex&amp; () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="vertex3_21841319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get the normal (unit) vector to this triangle.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ normal</a></span>: const Vector3D&lt;float&gt;&amp; ();
</code>
</div></td></tr><tr id="normal_21851319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Print the triangle.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ print</a></span>: std::ostream&amp; (std::ostream&amp; out) <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="print_21861319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> out</code> An output stream<br /></li></ul><div><code>return</code>  The output stream `out`<br /></div><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Generate the OpenGL code for this triangle.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ glPrint</a></span>: std::ostream&amp; (std::ostream&amp; out) <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="glPrint_21871319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> out</code> An output stream<br /></li></ul><div><code>return</code>  The output stream `out`<br /></div><br />
</div>
</td></tr>
</table>


