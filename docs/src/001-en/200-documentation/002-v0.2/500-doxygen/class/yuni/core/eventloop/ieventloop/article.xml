<title>IEventLoop</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2>A Synchronous Event Demultiplexer (Reactor pattern)</h2>
<h3>Public typedef</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4></h4></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">ParentType</a></span> : ParentT</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">RequestType</a></span> : Bind&lt;bool()&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">RequestListType</a></span> : LinkedList&lt;RequestType&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">EventLoopType</a></span> : IEventLoop&lt;ParentType, FlowT, StatsT, DetachedT&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">Ptr</a></span> : SmartPtr&lt;EventLoopType&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">ThreadingPolicy</a></span> : Policy::ObjectLevelLockableNotRecursive&lt;EventLoopType&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">ThreadType</a></span> : Yuni::Private::Core::EventLoop::Thread&lt; EventLoopType&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">FlowPolicy</a></span> : FlowT&lt; EventLoopType&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">StatisticsPolicy</a></span> : StatsT&lt; EventLoopType&gt;</code></td></tr>
</table></div>

<h3>Public function</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4>Constructor &amp; Destructor</h4></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">IEventLoop</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#"><b> ~ </b>IEventLoop</a></span>()</code></td></tr>
<tr><td></td><td><br /><h4>Operators</h4></td></tr>
<tr><td class="doxygen_index"><code>IEventLoop&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator+=</a></span>(const RequestType&amp; request)</code></td></tr>
<tr><td class="doxygen_index"><code>IEventLoop&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator&lt;&lt;</a></span>(const RequestType&amp; request)</code></td></tr>
<tr><td></td><td><br /><h4></h4></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">start</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">stop</a></span>(unsigned int timeout)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">dispatch</a></span>(const RequestType&amp; request)</code></td></tr>
<tr><td></td><td><br /><h4></h4></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">static</span> bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">onLoop</a></span>()</code></td></tr>
</table></div>

<h3>Protected function</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4></h4></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">suspend</a></span>(unsigned int timeout)</code></td></tr>
</table></div>

<h2>Detailed Description</h2><div>This class handles requests (from any thread or process) from a single thread. It is designed to run code that can not be thread-safe, like calls to OpenGL or OpenAL routines. If those requests must be run from the main thread (e.g. OpenGL), the event loop must not be detached (see the template parameter 'DetachedT') and the method 'start()' must be executed from the main thread.<br /> Here is a sample to create a minimalist event loop<source type="cpp">  class  MyEventLoop  :  public  Core::EventLoop:: IEventLoop &lt;MyEventLoop&gt;
  {
  public :
     bool  onLoop ()
     {
         std::cout  &lt;&lt;  "loop  !\n" ;
     }
  };
</source>
<br /><div class="doxygen_params">Parameters :</div><ul><li><code> ParentT</code> The parent class (CRTP)<br /></li><li><code> FlowT</code> The flow policy<br /></li><li><code> StatsT</code> The statistics policy<br /></li><li><code> DetechedT</code> A non-zero value to use a separate thread than the calling one for running the event loop. This value should always be true for code safety unless that you want to execute the event loop from the calling thread (e.g. the main thread). In this case, you _have_ to take care about blocking system calls that would prevent the loop to stop.<br /></li></ul><br /></div>
<table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_enum"></td><td class="doxnone"><div class="doxygen_brief"><code><i>(unmanaged tag: 4)</i></code>
</div></td></tr><tr id="@172detached_14821319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Parent.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ ParentType</a></span>: <span class="keyword">typedef</span> ParentT;
</code>
</div></td></tr><tr id="ParentType_14831319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">A request.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ RequestType</a></span>: <span class="keyword">typedef</span> Bind&lt;bool()&gt;;
</code>
</div></td></tr><tr id="RequestType_14841319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">List of requests.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ RequestListType</a></span>: <span class="keyword">typedef</span> LinkedList&lt;RequestType&gt;;
</code>
</div></td></tr><tr id="RequestListType_14851319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">The Event loop.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ EventLoopType</a></span>: <span class="keyword">typedef</span> IEventLoop&lt;ParentType, FlowT, StatsT, DetachedT&gt;;
</code>
</div></td></tr><tr id="EventLoopType_14861319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">The most suitable smart pointer for the class.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ Ptr</a></span>: <span class="keyword">typedef</span> SmartPtr&lt;EventLoopType&gt;;
</code>
</div></td></tr><tr id="Ptr_14871319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">The threading policy.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ ThreadingPolicy</a></span>: <span class="keyword">typedef</span> Policy::ObjectLevelLockableNotRecursive&lt;EventLoopType&gt;;
</code>
</div></td></tr><tr id="ThreadingPolicy_14881319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">The thread used for the inner loop.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ ThreadType</a></span>: <span class="keyword">typedef</span> Yuni::Private::Core::EventLoop::Thread&lt; EventLoopType&gt;;
</code>
</div></td></tr><tr id="ThreadType_14891319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">The flow policy.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ FlowPolicy</a></span>: <span class="keyword">typedef</span> FlowT&lt; EventLoopType&gt;;
</code>
</div></td></tr><tr id="FlowPolicy_14901319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">The statistics policy.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ StatisticsPolicy</a></span>: <span class="keyword">typedef</span> StatsT&lt; EventLoopType&gt;;
</code>
</div></td></tr><tr id="StatisticsPolicy_14911319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_enum"></td><td class="doxnone"><div class="doxygen_brief">Get if this policy is thread-safe.<br /><div class="doxygen_name_spacer"></div>
<code><i>(unmanaged tag: 4)</i></code>
</div></td></tr><tr id="@370_14921319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructor &amp; Destructor <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Default constructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ IEventLoop</a></span>:  ();
</code>
</div></td></tr><tr id="IEventLoop_14931319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Destructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ <b> ~ </b>IEventLoop</a></span>:  ();
</code>
</div></td></tr><tr id="~IEventLoop_14941319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Operators <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">The operator += : Dispatch a new request.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator+=</a></span>: IEventLoop&amp; (const RequestType&amp; request);
</code>
</div></td></tr><tr id="operator+=_14951319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">The operator &lt;&lt; : Dispatch a new request.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator&lt;&lt;</a></span>: IEventLoop&amp; (const RequestType&amp; request);
</code>
</div></td></tr><tr id="operator<<_14961319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Start the event loop.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ start</a></span>: void ();
</code>
</div></td></tr><tr id="start_14971319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">This method will be non-blocking in detached mode and the event loop will be ran from another thread. Otherwise it will block until the loop is stopped by a call to `stop()` from another thread or a request that had failed.<br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Gracefully stop the execution of the event loop, and wait for it.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ stop</a></span>: void (unsigned int timeout);
</code>
</div></td></tr><tr id="stop_14981319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">In detached mode, the method will wait for the end of the execution of the detached thread, and will kill it if the timeout expires. When the event loop is not detached, there is no guarantee that the event loop is really stopped after the call to this method, since there is no control on the thread that had called start() .<br /><div class="doxygen_params">Parameters :</div><ul><li><code> timeout</code> The number of milliseconds to wait before killing the event loop<br /></li></ul><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Post a new request into the queue.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ dispatch</a></span>: void (const RequestType&amp; request);
</code>
</div></td></tr><tr id="dispatch_14991319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> request</code> A request, which is merely a delegate via the class Bind&lt;&gt;)<br /></li></ul><br />
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">On loop event handler.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ onLoop</a></span>: <span class="keyword">static</span> bool ();
</code>
</div></td></tr><tr id="onLoop_15001319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div><b>warning</b> :  Has to be redefined by children classes !<br /></div><div><code>return</code>  False to stop the loop<br /></div><br />
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Protected <code class="doxygen_visibility">Protected</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Suspend the thread.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#"># suspend</a></span>: void (unsigned int timeout);
</code>
</div></td></tr><tr id="suspend_15011319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Protected <code class="doxygen_visibility">Protected</code></h3>
</td></tr>
<tr><td class="doxygen_var"></td><td class="doxnone"><div class="doxygen_brief">Mutex.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#"># pMutex</a></span>: Mutex;</code>
</div></td></tr><tr id="pMutex_15021319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
</table>


