<title>IEventLoop</title>
<pragma:weight value="0.5" />
<tag name="doxygen" />
<tag name="class" />



<h2>Summary of the class <code>IEventLoop</code></h2><table class="nostyle">
<tr><td><div class="visibility">Public</div></td>
<td><h3 class="h3noleftspace">Constructor &amp; Destructor</h3>
<p class="doxygen_fun">Default constructor.<br />
<code> <span class="method"><a href="#">IEventLoop</a></span>();</code></p>
<p class="doxygen_fun">Destructor.<br />
<code> <span class="method"><a href="#"><b> ~ </b>IEventLoop</a></span>();</code></p>
</td></tr>
<tr><td><div class="visibility">Public</div></td>
<td><h3 class="h3noleftspace">Operators</h3>
<p class="doxygen_fun">The operator += : Dispatch a new request.<br />
<code>IEventLoop &amp; <span class="method"><a href="#">operator+=</a></span>(const RequestType<b>&amp;</b> request);</code></p>
<p class="doxygen_fun">The operator &lt;&lt; : Dispatch a new request.<br />
<code>IEventLoop &amp; <span class="method"><a href="#">operator&lt;&lt;</a></span>(const RequestType<b>&amp;</b> request);</code></p>
</td></tr>
<tr><td><div class="visibility">Public
</div></td>
<td><h3 class="h3noleftspace">Public
</h3>
<p>A non-zero value if a separate thread must be used for running the event loop instead of the calling one.<br />
<code><i>(unmanaged tag)</i></code></p>
<p class="doxygen_typedef">Parent.<br />
<code><span class="keyword">typedef</span> ParentT <span class="method"><a href="#">ParentType</a></span>;</code></p>
<p class="doxygen_typedef">A request.<br />
<code><span class="keyword">typedef</span> Bind &lt; bool()&gt; <span class="method"><a href="#">RequestType</a></span>;</code></p>
<p class="doxygen_typedef">List of requests.<br />
<code><span class="keyword">typedef</span> LinkedList &lt; RequestType &gt; <span class="method"><a href="#">RequestListType</a></span>;</code></p>
<p class="doxygen_typedef">The Event loop.<br />
<code><span class="keyword">typedef</span> IEventLoop &lt; ParentType , FlowT, StatsT, DetachedT &gt; <span class="method"><a href="#">EventLoopType</a></span>;</code></p>
<p class="doxygen_typedef">The most suitable smart pointer for the class.<br />
<code><span class="keyword">typedef</span> SmartPtr &lt; EventLoopType &gt; <span class="method"><a href="#">Ptr</a></span>;</code></p>
<p class="doxygen_typedef">The threading policy.<br />
<code><span class="keyword">typedef</span> Policy::ObjectLevelLockableNotRecursive &lt; EventLoopType &gt; <span class="method"><a href="#">ThreadingPolicy</a></span>;</code></p>
<p class="doxygen_typedef">The thread used for the inner loop.<br />
<code><span class="keyword">typedef</span> Yuni::Private::Core::EventLoop::Thread&lt; EventLoopType &gt; <span class="method"><a href="#">ThreadType</a></span>;</code></p>
<p class="doxygen_typedef">The flow policy.<br />
<code><span class="keyword">typedef</span> FlowT&lt; EventLoopType &gt; <span class="method"><a href="#">FlowPolicy</a></span>;</code></p>
<p class="doxygen_typedef">The statistics policy.<br />
<code><span class="keyword">typedef</span> StatsT&lt; EventLoopType &gt; <span class="method"><a href="#">StatisticsPolicy</a></span>;</code></p>
<p>Get if this policy is thread-safe.<br />
<code><i>(unmanaged tag)</i></code></p>
</td></tr>
<tr><td><div class="visibility">Public</div></td>
<td><h3 class="h3noleftspace">Public</h3>
<p><code><i>(unmanaged tag)</i></code></p>
</td></tr>
<tr><td><div class="visibility">Public
</div></td>
<td><h3 class="h3noleftspace">Public
</h3>
<p class="doxygen_fun">Start the event loop.<br />
<code>void <span class="method"><a href="#">start</a></span>();</code></p>
<p class="doxygen_fun">Gracefully stop the execution of the event loop, and wait for it.<br />
<code>void <span class="method"><a href="#">stop</a></span>(unsigned int timeout);</code></p>
<p class="doxygen_fun">Post a new request into the queue.<br />
<code>void <span class="method"><a href="#">dispatch</a></span>(const RequestType<b>&amp;</b> request);</code></p>
</td></tr>
<tr><td><div class="visibility">Public
</div></td>
<td><h3 class="h3noleftspace">Public
</h3>
<p class="doxygen_fun">On loop event handler.<br />
<code><span class="keyword">static</span> bool <span class="method"><a href="#">onLoop</a></span>();</code></p>
</td></tr>
<tr><td><div class="visibility">Protected
</div></td>
<td><h3 class="h3noleftspace">Protected
</h3>
<p class="doxygen_fun">Suspend the thread.<br />
<code>void <span class="method"><a href="#">suspend</a></span>(unsigned int timeout);</code></p>
</td></tr>
<tr><td><div class="visibility">Protected
</div></td>
<td><h3 class="h3noleftspace">Protected
</h3>
<p class="doxygen_var">Mutex.<br />
<code>Mutex <span class="method"><a href="#">pMutex</a></span>;</code></p>
</td></tr>
</table>


<h2>Detailed Description</h2>
