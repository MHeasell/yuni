<title>IEventLoop</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2><code>IEventLoop</code></h2><table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructor &amp; Destructor <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Default constructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">IEventLoop</a></span>:  ();</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Destructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#"><b> ~ </b>IEventLoop</a></span>:  ();</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Operators <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The operator += : Dispatch a new request.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">operator+=</a></span>: IEventLoop &amp; (const RequestType<b>&amp;</b> request);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The operator &lt;&lt; : Dispatch a new request.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">operator&lt;&lt;</a></span>: IEventLoop &amp; (const RequestType<b>&amp;</b> request);</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public
 <code class="doxygen_visibility">Public
</code></h3>
</td></tr>
<tr><td></td><td class="doxnone">A non-zero value if a separate thread must be used for running the event loop instead of the calling one.<div class="doxygen_name_spacer"></div>
<code><i>(unmanaged tag: 0)</i></code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Parent.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">ParentType</a></span>: <span class="keyword">typedef</span> ParentT;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">A request.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">RequestType</a></span>: <span class="keyword">typedef</span> Bind &lt; bool()&gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">List of requests.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">RequestListType</a></span>: <span class="keyword">typedef</span> LinkedList &lt; RequestType &gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The Event loop.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">EventLoopType</a></span>: <span class="keyword">typedef</span> IEventLoop &lt; ParentType , FlowT, StatsT, DetachedT &gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The most suitable smart pointer for the class.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">Ptr</a></span>: <span class="keyword">typedef</span> SmartPtr &lt; EventLoopType &gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The threading policy.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">ThreadingPolicy</a></span>: <span class="keyword">typedef</span> Policy::ObjectLevelLockableNotRecursive &lt; EventLoopType &gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The thread used for the inner loop.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">ThreadType</a></span>: <span class="keyword">typedef</span> Yuni::Private::Core::EventLoop::Thread&lt; EventLoopType &gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The flow policy.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">FlowPolicy</a></span>: <span class="keyword">typedef</span> FlowT&lt; EventLoopType &gt;;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">The statistics policy.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">StatisticsPolicy</a></span>: <span class="keyword">typedef</span> StatsT&lt; EventLoopType &gt;;</code>
</td></tr>
<tr><td></td><td class="doxnone">Get if this policy is thread-safe.<div class="doxygen_name_spacer"></div>
<code><i>(unmanaged tag: 0)</i></code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td></td><td class="doxnone"><code><i>(unmanaged tag: 0)</i></code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public
 <code class="doxygen_visibility">Public
</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Start the event loop.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">start</a></span>: void ();</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Gracefully stop the execution of the event loop, and wait for it.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">stop</a></span>: void (unsigned int timeout);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Post a new request into the queue.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">dispatch</a></span>: void (const RequestType<b>&amp;</b> request);</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public
 <code class="doxygen_visibility">Public
</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">On loop event handler.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">onLoop</a></span>: <span class="keyword">static</span> bool ();</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Protected
 <code class="doxygen_visibility">Protected
</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Suspend the thread.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">suspend</a></span>: void (unsigned int timeout);</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Protected
 <code class="doxygen_visibility">Protected
</code></h3>
</td></tr>
<tr><td class="doxygen_var"></td><td class="doxnone">Mutex.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">pMutex</a></span>: Mutex;</code>
</td></tr>
</table>


