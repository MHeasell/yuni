<title>MD5</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2>MD5 Checksum</h2>
<h3>Public function</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4>Constructor &amp; Destructor</h4></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">MD5</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#"><b> ~ </b>MD5</a></span>()</code></td></tr>
<tr><td></td><td><br /><h4></h4></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">static</span> String </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">FromString</a></span>(const String&amp; s)</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">static</span> String </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">FromRawData</a></span>(const void* rawdata, uint64 size)</code></td></tr>
<tr><td></td><td><br /><h4></h4></td></tr>
<tr><td class="doxygen_index"><code>const String&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">fromRawData</a></span>(const void* rawdata, uint64 size)</code></td></tr>
<tr><td class="doxygen_index"><code>const String&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">fromFile</a></span>(const String&amp; filename)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">reset</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>const String&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">fromString</a></span>(const String&amp; s)</code></td></tr>
<tr><td class="doxygen_index"><code>const String&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">value</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>const String&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator()</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>const String&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator[]</a></span>(const String&amp; s)</code></td></tr>
</table></div>

<h2>Detailed Description</h2><div>Compute the MD5 from a string :<source type="cpp">  Yuni::Hash::Checksum::MD5  md5;
  md5. fromString ( "Hello  world" );
  std::cout  &lt;&lt;  md5. value ()  &lt;&lt;  std::endl;
</source>
<br /> Another way to do it (1/2 - recommended) :<source type="cpp">  Yuni::Hash::Checksum::MD5  md5;
  std::cout  &lt;&lt;  md5. fromString ( "Hello  world" )  &lt;&lt;  std::endl;
  std::cout  &lt;&lt;  md5. value ()  &lt;&lt;  std::endl;  //  will  remain  the  same  than  before
</source>
<br /> Another way to do it (2/2) :<source type="cpp">  std::cout  &lt;&lt;  Yuni::Hash::Checksum::MD5::FromString ( "Hello  world" )  &lt;&lt;  std::endl;
</source>
<br /> Compute a lot of MD5 from a string :<source type="cpp">  MD5  md5;
  std::cout  &lt;&lt;  md5[ "Hello" ]  &lt;&lt;  std::endl;
  std::cout  &lt;&lt;  md5[ "World" ]  &lt;&lt;  std::endl;
  std::cout  &lt;&lt;  md5[ "Hello  world" ]  &lt;&lt;  std::endl;
</source>
<br /></div>
<table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructor &amp; Destructor <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Default constructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ MD5</a></span>:  ();
</code>
</div></td></tr><tr id="MD5_34901319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Destructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ <b> ~ </b>MD5</a></span>:  ();
</code>
</div></td></tr><tr id="~MD5_34911319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Compute the hash from a string.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ FromString</a></span>: <span class="keyword">static</span> String (const String&amp; s);
</code>
</div></td></tr><tr id="FromString_34921319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> s</code> The string<br /></li></ul><div><code>return</code>  The hash value<br /></div><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Compute the hash from raw data.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ FromRawData</a></span>: <span class="keyword">static</span> String (const void* rawdata, uint64 size);
</code>
</div></td></tr><tr id="FromRawData_34931319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> rawdata</code> The original buffer<br /></li><li><code> size</code> Size of the given buffer.<br /></li></ul><div><code>return</code>  The hash value<br /></div><br />
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Compute the hash from raw data.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ fromRawData</a></span>: const String&amp; (const void* rawdata, uint64 size);
</code>
</div></td></tr><tr id="fromRawData_34941319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> rawdata</code> The buffer<br /></li><li><code> size</code> The size of the buffer. AutoDetectNullChar will make an autodetection of the length<br /></li></ul><div><code>return</code>  The hash value<br /></div><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Compute the hash of a given file.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ fromFile</a></span>: const String&amp; (const String&amp; filename);
</code>
</div></td></tr><tr id="fromFile_34951319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> filename</code> The filename to analyze<br /></li></ul><div><code>return</code>  The hash value<br /></div><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Reset the hash value.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ reset</a></span>: void ();
</code>
</div></td></tr><tr id="reset_34961319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Compute the hash from a string.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ fromString</a></span>: const String&amp; (const String&amp; s);
</code>
</div></td></tr><tr id="fromString_34971319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> s</code> The string<br /></li></ul><div><code>return</code>  The hash value<br /></div><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get the last hash value.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ value</a></span>: const String&amp; () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="value_34981319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get the hash value.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator()</a></span>: const String&amp; () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="operator()_34991319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Compute the hash value from a string and returns it.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator[]</a></span>: const String&amp; (const String&amp; s);
</code>
</div></td></tr><tr id="operator[]_35001319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> s</code> The string to compute<br /></li></ul><div><code>return</code>  The hash value<br /></div><br />
</div>
</td></tr>
</table>


