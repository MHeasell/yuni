<title>Argument</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2>Type of each argument by their index</h2>
<h3>Public typedef</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4></h4></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a name="#structYuni_1_1Event_1_1Argument_1a9f1703f16709c20cc6e214809d069af1" href="#">Type</a></span> : BindType::template Argument&lt;I&gt;:: Type</code></td></tr>
</table></div>

<h2>Detailed Description</h2><div>The typedef Type is always valid, even if the argument does not exist. If this case, the type will be the empty class Yuni::None . You may use `argumentCount` to know exactly the number of arguments.<div class="doxygen_params">Parameters :</div><ul><li><code> I</code> Index of the argument (zero-based)<br /></li></ul><br /></div><div style="margin-top:3em;border:1px solid #aaa;border-bottom-style:none;border-left-style:none;border-right-style:none"></div>
<table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief"><b>Type of the argument at position I (zero-based)<br /></b><div class="doxygen_name_spacer"></div>
<code><span class="method"><a name="structYuni_1_1Event_1_1Argument_1a9f1703f16709c20cc6e214809d069af1" href="#">+ Type</a></span>: <span class="keyword">typedef</span> BindType::template Argument&lt;I&gt;:: Type;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
</table>


