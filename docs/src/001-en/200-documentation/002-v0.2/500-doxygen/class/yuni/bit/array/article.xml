<title>Array</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2><code>Array</code></h2><table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructors &amp; Destructor <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Default constructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">Array</a></span>:  ();</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Constructor, with an initial number of bits.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">Array</a></span>:  (unsigned int n);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Constructor, with an initial number of bits and a value for each of them.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">Array</a></span>:  (unsigned int n, bool value);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Copy constructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">Array</a></span>:  (const Array<b>&amp;</b> copy);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Destructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#"><b> ~ </b>Array</a></span>:  ();</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Bit manipulation <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Unset all bits at once.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">reset</a></span>: void ();</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Set/Unset all bits at once.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">reset</a></span>: void (bool value);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Set the Ith bit.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">set</a></span>: void (unsigned int i);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Set/Unset the Ith bit.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">set</a></span>: void (unsigned int i, bool value);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Unset the Ith bit.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">unset</a></span>: void (unsigned int i);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Unset all bits at once.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">unset</a></span>: void ();</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get if the Ith bit is set.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">get</a></span>: bool (unsigned int i) <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Get if the Ith bit is set.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">test</a></span>: bool (unsigned int i) <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Test if any bit is set.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">any</a></span>: bool () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Test if no bit is set.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">none</a></span>: bool () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Test if all bit are set.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">all</a></span>: bool () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Import/Export <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Load an array of bit from a buffer.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">loadFromBuffer</a></span>: void (const StringT<b>&amp;</b> buffer);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Load an array of bit from a buffer.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">loadFromBuffer</a></span>: void (const StringT<b>&amp;</b> buffer, unsigned int size);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Save the array of bits into another buffer (which may use any type)<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">saveToBuffer</a></span>: void (AnyBufferT<b>&amp;</b> u);</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Lookup <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Find the first bit set or unset from a given offset.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">find</a></span>: unsigned int (unsigned int offset) <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Find the first N bit set or unset from a given offset.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">findN</a></span>: unsigned int (unsigned int count, unsigned int offset) <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Memory management <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The number of bits within the buffer.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">size</a></span>: unsigned int () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The number of bits within the buffer.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">count</a></span>: unsigned int () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The size in bytes needed to store all bits within the buffer.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">sizeInBytes</a></span>: unsigned int () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Reserve an amount of bits.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">reserve</a></span>: void (unsigned int n);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Truncate to an amount of bits.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">truncate</a></span>: void (unsigned int n);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Resize the internal buffer to a given amount of bit.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">resize</a></span>: void (unsigned int n);</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Stream <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">print</a></span>: void (U<b>&amp;</b> out) <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Operators <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The operator `=`.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">operator=</a></span>: Array &amp; (const Array<b>&amp;</b> rhs);</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">The operator `=`.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">operator=</a></span>: Array &amp; (const StringT<b>&amp;</b> rhs);</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public
 <code class="doxygen_visibility">Public
</code></h3>
</td></tr>
<tr><td></td><td class="doxnone">Invalide offset.<div class="doxygen_name_spacer"></div>
<code><i>(unmanaged tag: 0)</i></code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Size.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">Size</a></span>: <span class="keyword">typedef</span> unsigned int;</code>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone">Buffer Type.<div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">BufferType</a></span>: <span class="keyword">typedef</span> CString &lt; 20, true, false &gt;;</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public
 <code class="doxygen_visibility">Public
</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">c_str</a></span>: const char * () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">data</a></span>: const char * () <span class="keyword">const</span>;</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">data</a></span>: char * ();</code>
</td></tr>
</table>


