<title>Vertex</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2>A vertex is a point in space which is the start of two edges of a triangle in a mesh</h2>
<h3>Public function</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4>Constructors and destructors</h4></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Vertex_1a22f6c3ff40fbbc41db695a56bc5f04a0">Vertex</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Vertex_1a5ff32435235d81442cc635b076516d3b">Vertex</a></span>(const Point3D&lt;float&gt;&amp; position)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Vertex_1a083abd5cba3edea4b105d7078cb16659">Vertex</a></span>(const U x, const V y, const W z)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Vertex_1a2431f057214bb1822d964ae336cefb26"><b> ~ </b>Vertex</a></span>()</code></td></tr>
<tr><td></td><td><br /><h4>Operators</h4></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Vertex_1afca6dd06980f420000e84e6b951a9cf4">operator==</a></span>(const Vertex&amp; other) <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Vertex_1a062824d6ca97d6efea86246270b0506a">operator!=</a></span>(const Vertex&amp; other) <span class="keyword">const</span></code></td></tr>
<tr><td></td><td><br /><h4></h4></td></tr>
<tr><td class="doxygen_index"><code>const Point3D&lt;float&gt;&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Vertex_1a0346ceff74eddcf0f09f751d48f95afc">position</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>String </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Vertex_1a43caa2e552af16d5bd76d42df92aca1a">toString</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>std::ostream&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#classYuni_1_1Vertex_1a77c7997c2b9574ed17dcfafe679d1cdc">glPrint</a></span>(std::ostream&amp; out) <span class="keyword">const</span></code></td></tr>
</table></div>

<h2>Detailed Description</h2><table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructors and destructors <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Default constructor.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Vertex_1a22f6c3ff40fbbc41db695a56bc5f04a0" href="#">+ Vertex</a></span>:  ();
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Default constructor.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Vertex_1a5ff32435235d81442cc635b076516d3b" href="#">+ Vertex</a></span>:  (const Point3D&lt;float&gt;&amp; position);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Default constructor.<br /></b><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist"><span class="keyword">template</span>&lt;typename U , typename V , typename W &gt;</div>
 <span class="method"><a name="classYuni_1_1Vertex_1a083abd5cba3edea4b105d7078cb16659" href="#">+ Vertex</a></span>:  (const U x, const V y, const W z);
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Default constructor.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Vertex_1a2431f057214bb1822d964ae336cefb26" href="#">+ <b> ~ </b>Vertex</a></span>:  ();
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Operators <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Comparison operator (equal with)<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Vertex_1afca6dd06980f420000e84e6b951a9cf4" href="#">+ operator==</a></span>: bool (const Vertex&amp; other) <span class="keyword">const</span>;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> other</code> The other vertex to compare with<br /></li></ul><div><code>return</code>  True if the two vertices are coincident<br /></div><br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Comparison operator (non equal with)<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Vertex_1a062824d6ca97d6efea86246270b0506a" href="#">+ operator!=</a></span>: bool (const Vertex&amp; other) <span class="keyword">const</span>;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> other</code> The other vertex to compare with<br /></li></ul><div><code>return</code>  True if the two vertices are distinct<br /></div><br />
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Position of the vertex in space.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Vertex_1a0346ceff74eddcf0f09f751d48f95afc" href="#">+ position</a></span>: const Point3D&lt;float&gt;&amp; () <span class="keyword">const</span>;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Get a string representing the object to use as hash key.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Vertex_1a43caa2e552af16d5bd76d42df92aca1a" href="#">+ toString</a></span>: String () <span class="keyword">const</span>;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><b>Generate the OpenGL code for this vertex.<br /></b><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a name="classYuni_1_1Vertex_1a77c7997c2b9574ed17dcfafe679d1cdc" href="#">+ glPrint</a></span>: std::ostream&amp; (std::ostream&amp; out) <span class="keyword">const</span>;
</code>
</div></td></tr><tr><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc"><div class="doxygen_params">Parameters :</div><ul><li><code> out</code> An output stream<br /></li></ul><div><code>return</code>  The output stream `out`<br /></div><br />
</div>
</td></tr>
</table>


