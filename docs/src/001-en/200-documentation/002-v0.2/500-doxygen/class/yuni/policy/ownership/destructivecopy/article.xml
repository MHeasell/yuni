<title>DestructiveCopy</title>
<pragma:weight value="0.5" />
<tag name="doxygen" />
<tag name="class" />



<h2>Summary of the class <code>DestructiveCopy</code></h2><table class="nostyle">
<tr><td><div class="visibility">Public</div></td>
<td><h3 class="h3noleftspace">Constructors</h3>
<p class="doxygen_fun">Default constructor.<br />
<code> <span class="method"><a href="#">DestructiveCopy</a></span>(); [inline]</code></p>
<p class="doxygen_fun">Copy constructor.<br />
<code><span class="keyword">template</span>&lt;class U &gt;<br /> <span class="method"><a href="#">DestructiveCopy</a></span>(const DestructiveCopy &lt; U &gt;<b>&amp;</b> ); [inline]</code></p>
</td></tr>
<tr><td><div class="visibility">Public
</div></td>
<td><h3 class="h3noleftspace">Public
</h3>
<p>Get if the ownership policy is destructive.<br />
<code><i>(unmanaged tag)</i></code></p>
</td></tr>
<tr><td><div class="visibility">Public
</div></td>
<td><h3 class="h3noleftspace">Public
</h3>
<p class="doxygen_fun">Initialization from a raw pointer.<br />
<code>void <span class="method"><a href="#">initFromRawPointer</a></span>(const T<b>&amp;</b> ); [inline]</code></p>
</td></tr>
<tr><td><div class="visibility">Public
</div></td>
<td><h3 class="h3noleftspace">Public
</h3>
<p class="doxygen_fun">Clone this object.<br />
<code><span class="keyword">template</span>&lt;class U &gt;<br /><span class="keyword">static</span> T <span class="method"><a href="#">clone</a></span>(U<b>&amp;</b> rhs); [inline]</code></p>
<p class="doxygen_fun"><code><span class="keyword">static</span> bool <span class="method"><a href="#">release</a></span>(const T<b>&amp;</b> ); [inline]</code></p>
<p class="doxygen_fun"><code><span class="keyword">static</span> void <span class="method"><a href="#">swapPointer</a></span>(DestructiveCopy<b>&amp;</b> ); [inline]</code></p>
</td></tr>
</table>


<h2>Detailed Description</h2>
