<title>Variant</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2><code>Variant</code></h2><table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructors <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Constructs an empty Variant .<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">Variant</a></span>:  ();
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Constructs a copy of an existing Variant .<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">Variant</a></span>:  (const Variant&amp; rhs);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Constructs a Variant based on an existing variable of simple type.<div class="doxygen_name_spacer"></div>
<code><div id="Variant_19591319137232_templ" style="display:none"><span class="keyword">template</span>&lt;typename T &gt;</div>
 <span class="method"><a href="#">Variant</a></span>:  (const T&amp; rhs);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Destructor.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#"><b> ~ </b>Variant</a></span>:  ();
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Alteration methods <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Assignment from an existing Variant .<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">assign</a></span>: void (const Variant&amp; rhs);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Assignment from a simple type.<div class="doxygen_name_spacer"></div>
<code><div id="assign_19621319137232_templ" style="display:none"><span class="keyword">template</span>&lt;typename T &gt;</div>
 <span class="method"><a href="#">assign</a></span>: void (const T&amp; rhs);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Specific assignment from C strings.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">assign</a></span>: void (const char* rhs);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Resets the Variant to an empty one.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">clear</a></span>: void ();
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Information methods <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone">Returns true if the Variant is empty.<div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">empty</a></span>: bool () <span class="keyword">const</span>;
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Operator overloads <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code> <span class="method"><a href="#">operator=</a></span>: Variant&amp; (const Variant&amp; rhs);
</code>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code><div id="operator=_19671319137232_templ" style="display:none"><span class="keyword">template</span>&lt;typename T &gt;</div>
 <span class="method"><a href="#">operator=</a></span>: Variant&amp; (const T&amp; rhs);
</code>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Retrieval methods <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><code><div id="to_19681319137232_templ" style="display:none"><span class="keyword">template</span>&lt;typename T &gt;</div>
 <span class="method"><a href="#">to</a></span>: T () <span class="keyword">const</span>;
</code>
</td></tr>
</table>


