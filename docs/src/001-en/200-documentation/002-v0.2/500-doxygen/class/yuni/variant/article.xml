<title>Variant</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2>Variant type implementation</h2>
<h3>Public function</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4>Constructors</h4></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Variant</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Variant</a></span>(const Variant&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">Variant</a></span>(const T&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#"><b> ~ </b>Variant</a></span>()</code></td></tr>
<tr><td></td><td><br /><h4>Alteration methods</h4></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">assign</a></span>(const Variant&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">assign</a></span>(const T&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">assign</a></span>(const char* rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">clear</a></span>()</code></td></tr>
<tr><td></td><td><br /><h4>Information methods</h4></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">empty</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td></td><td><br /><h4>Operator overloads</h4></td></tr>
<tr><td class="doxygen_index"><code>Variant&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator=</a></span>(const Variant&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>Variant&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator=</a></span>(const T&amp; rhs)</code></td></tr>
<tr><td></td><td><br /><h4>Retrieval methods</h4></td></tr>
<tr><td class="doxygen_index"><code>T </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">to</a></span>() <span class="keyword">const</span></code></td></tr>
</table></div>

<h2>Detailed Description</h2><div>This is an implementation of Variants that handles a limited range of types (classical ones), but that can make automagic conversions between them, if such a conversion is possible.<br /> It differs from Any , which can handle almost any type (with the notable exception of arrays), but cannot automatically convert from a type to another.<br /> How to use:<source type="cpp">  Variant  v( int (12));

  std::cout  &lt;&lt;  v.to&lt; float &gt;()  &lt;&lt;  std::endl;
  std::cout  &lt;&lt;  v.to&lt; String &gt;()  &lt;&lt;  std::endl;
</source>
<br /></div>
<table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructors <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Constructs an empty Variant .<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ Variant</a></span>:  ();
</code>
</div></td></tr><tr id="Variant_19411319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Constructs a copy of an existing Variant .<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ Variant</a></span>:  (const Variant&amp; rhs);
</code>
</div></td></tr><tr id="Variant_19421319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Constructs a Variant based on an existing variable of simple type.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="Variant_19431319844517_tmpl"><span class="keyword">template</span>&lt;typename T &gt;</div>
 <span class="method"><a href="#">+ Variant</a></span>:  (const T&amp; rhs);
</code>
</div></td></tr><tr id="Variant_19431319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Destructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ <b> ~ </b>Variant</a></span>:  ();
</code>
</div></td></tr><tr id="~Variant_19441319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Alteration methods <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Assignment from an existing Variant .<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ assign</a></span>: void (const Variant&amp; rhs);
</code>
</div></td></tr><tr id="assign_19451319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Assignment from a simple type.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="assign_19461319844517_tmpl"><span class="keyword">template</span>&lt;typename T &gt;</div>
 <span class="method"><a href="#">+ assign</a></span>: void (const T&amp; rhs);
</code>
</div></td></tr><tr id="assign_19461319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Specific assignment from C strings.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ assign</a></span>: void (const char* rhs);
</code>
</div></td></tr><tr id="assign_19471319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Resets the Variant to an empty one.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ clear</a></span>: void ();
</code>
</div></td></tr><tr id="clear_19481319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Information methods <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Returns true if the Variant is empty.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ empty</a></span>: bool () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="empty_19491319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Operator overloads <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><code> <span class="method"><a href="#">+ operator=</a></span>: Variant&amp; (const Variant&amp; rhs);
</code>
</div></td></tr><tr id="operator=_19501319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><code><div class="doxygen_tmpllist" id="operator=_19511319844517_tmpl"><span class="keyword">template</span>&lt;typename T &gt;</div>
 <span class="method"><a href="#">+ operator=</a></span>: Variant&amp; (const T&amp; rhs);
</code>
</div></td></tr><tr id="operator=_19511319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Retrieval methods <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><code><div class="doxygen_tmpllist" id="to_19521319844517_tmpl"><span class="keyword">template</span>&lt;typename T &gt;</div>
 <span class="method"><a href="#">+ to</a></span>: T () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="to_19521319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
</table>


