<title>IIterator</title>
<pragma:weight value="0.5" />
<pragma:toc visible="false" />
<tag name="doxygen" />
<tag name="dox:class" />



<h2>Generic Iterator</h2>
<h3>Public typedef</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4></h4></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">ModelType</a></span> : ModelT</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">IteratorType</a></span> : IIterator&lt;ModelT, ConstT&gt;</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">iterator_category</a></span> : IteratorType</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">AncestorType</a></span> : ModelT</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">value_type</a></span> : ModelT::value_type</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">difference_type</a></span> : ModelT::difference_type</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">pointer</a></span> : Static::If&lt;ConstT, const value_type*, value_type*&gt;::Type</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">const_pointer</a></span> : const value_type*</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">reference</a></span> : Static::If&lt;ConstT, const value_type&amp;, value_type&amp;&gt;::Type</code></td></tr>
<tr><td class="doxygen_index"><code><span class="keyword">typedef</span></code></td><td class="doxygen_index_def"><code><span class="method"><a href="#">const_reference</a></span> : const value_type&amp;</code></td></tr>
</table></div>

<h3>Public function</h3>
<div class="doxygen_brief"><table class="nostyle"><tr><td></td><td><h4>Constructors &amp; Destructor</h4></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">IIterator</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">IIterator</a></span>(const IteratorType&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">IIterator</a></span>(const IIterator&lt;M, C&gt;&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">IIterator</a></span>(const U1&amp; u1)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">IIterator</a></span>(const U1&amp; u1, const U2&amp; u2)</code></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">IIterator</a></span>(const U1&amp; u1, const U2&amp; u2, const U3&amp; u3)</code></td></tr>
<tr><td></td><td><br /><h4>Common operations</h4></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">forward</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">forward</a></span>(difference_type n)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">backward</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">backward</a></span>(difference_type n)</code></td></tr>
<tr><td class="doxygen_index"><code>void </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">advance</a></span>(difference_type n)</code></td></tr>
<tr><td class="doxygen_index"><code>difference_type </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">distance</a></span>(const IIterator&lt;M, C&gt;&amp; rhs) <span class="keyword">const</span></code></td></tr>
<tr><td></td><td><br /><h4>Operators</h4></td></tr>
<tr><td class="doxygen_index"><code>reference </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator*</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>const_reference </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator*</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>pointer </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator-&gt;</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>const_pointer </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator-&gt;</a></span>() <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>IteratorType&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator++</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>IteratorType&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator--</a></span>()</code></td></tr>
<tr><td class="doxygen_index"><code>IteratorType </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator++</a></span>(int )</code></td></tr>
<tr><td class="doxygen_index"><code>IteratorType </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator--</a></span>(int )</code></td></tr>
<tr><td class="doxygen_index"><code>IteratorType&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator+=</a></span>(difference_type n)</code></td></tr>
<tr><td class="doxygen_index"><code>IteratorType&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator-=</a></span>(difference_type n)</code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator==</a></span>(const IIterator&lt;M, C&gt;&amp; rhs) <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>bool </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator!=</a></span>(const IIterator&lt;M, C&gt;&amp; rhs) <span class="keyword">const</span></code></td></tr>
<tr><td class="doxygen_index"><code>IteratorType&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator=</a></span>(const IteratorType&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>IteratorType&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator=</a></span>(const IIterator&lt;M, C&gt;&amp; rhs)</code></td></tr>
<tr><td></td><td><br /><h4></h4></td></tr>
<tr><td class="doxygen_index"><code> </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">IIterator</a></span>(const IIterator&lt;ModelT, ConstT&gt;&amp; rhs)</code></td></tr>
<tr><td class="doxygen_index"><code>IIterator&lt;ModelT, ConstT&gt;&amp; </code></td><td class="doxygen_index_def"><code> <span class="method"><a href="#">operator=</a></span>(const IIterator&lt;ModelT, ConstT&gt;&amp; rhs)</code></td></tr>
</table></div>

<h2>Detailed Description</h2><table class="doxygen_table">
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_enum"></td><td class="doxnone"><div class="doxygen_brief"><code><i>(unmanaged tag: 4)</i></code>
</div></td></tr><tr id="@193isConstcanGoForwardcanGoBackward_9041319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">The model implementation.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ ModelType</a></span>: <span class="keyword">typedef</span> ModelT;
</code>
</div></td></tr><tr id="ModelType_9051319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">The iterator type.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ IteratorType</a></span>: <span class="keyword">typedef</span> IIterator&lt;ModelT, ConstT&gt;;
</code>
</div></td></tr><tr id="IteratorType_9061319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Category.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ iterator_category</a></span>: <span class="keyword">typedef</span> IteratorType;
</code>
</div></td></tr><tr id="iterator_category_9071319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Ancestor.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ AncestorType</a></span>: <span class="keyword">typedef</span> ModelT;
</code>
</div></td></tr><tr id="AncestorType_9081319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Value type.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ value_type</a></span>: <span class="keyword">typedef</span> ModelT::value_type;
</code>
</div></td></tr><tr id="value_type_9091319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Difference type.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ difference_type</a></span>: <span class="keyword">typedef</span> ModelT::difference_type;
</code>
</div></td></tr><tr id="difference_type_9101319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Pointer.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ pointer</a></span>: <span class="keyword">typedef</span> Static::If&lt;ConstT, const value_type*, value_type*&gt;::Type;
</code>
</div></td></tr><tr id="pointer_9111319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Const pointer.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ const_pointer</a></span>: <span class="keyword">typedef</span> const value_type*;
</code>
</div></td></tr><tr id="const_pointer_9121319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Reference.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ reference</a></span>: <span class="keyword">typedef</span> Static::If&lt;ConstT, const value_type&amp;, value_type&amp;&gt;::Type;
</code>
</div></td></tr><tr id="reference_9131319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_typedef"></td><td class="doxnone"><div class="doxygen_brief">Const reference.<br /><div class="doxygen_name_spacer"></div>
<code><span class="method"><a href="#">+ const_reference</a></span>: <span class="keyword">typedef</span> const value_type&amp;;
</code>
</div></td></tr><tr id="const_reference_9141319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Constructors &amp; Destructor <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Default Constructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ IIterator</a></span>:  ();
</code>
</div></td></tr><tr id="IIterator_9151319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Copy constructor.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ IIterator</a></span>:  (const IteratorType&amp; rhs);
</code>
</div></td></tr><tr id="IIterator_9161319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Copy constructor from any iterator.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="IIterator_9171319844517_tmpl"><span class="keyword">template</span>&lt;class M , bool C&gt;</div>
 <span class="method"><a href="#">+ IIterator</a></span>:  (const IIterator&lt;M, C&gt;&amp; rhs);
</code>
</div></td></tr><tr id="IIterator_9171319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Assignation from a custom type, defined by the real implementation.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="IIterator_9181319844517_tmpl"><span class="keyword">template</span>&lt;class U1 &gt;</div>
 <span class="method"><a href="#">+ IIterator</a></span>:  (const U1&amp; u1);
</code>
</div></td></tr><tr id="IIterator_9181319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Assignation from two custom types, defined by the real implementation.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="IIterator_9191319844517_tmpl"><span class="keyword">template</span>&lt;class U1 , class U2 &gt;</div>
 <span class="method"><a href="#">+ IIterator</a></span>:  (const U1&amp; u1, const U2&amp; u2);
</code>
</div></td></tr><tr id="IIterator_9191319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Assignation from three custom types, defined by the real implementation.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="IIterator_9201319844517_tmpl"><span class="keyword">template</span>&lt;class U1 , class U2 , class U3 &gt;</div>
 <span class="method"><a href="#">+ IIterator</a></span>:  (const U1&amp; u1, const U2&amp; u2, const U3&amp; u3);
</code>
</div></td></tr><tr id="IIterator_9201319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Common operations <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Increment the iterator by the distance 1.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ forward</a></span>: void ();
</code>
</div></td></tr><tr id="forward_9211319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Increment the iterator by the distance n.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ forward</a></span>: void (difference_type n);
</code>
</div></td></tr><tr id="forward_9221319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Decrement the iterator by the distance n.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ backward</a></span>: void ();
</code>
</div></td></tr><tr id="backward_9231319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Decrement the iterator by the distance n.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ backward</a></span>: void (difference_type n);
</code>
</div></td></tr><tr id="backward_9241319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Increment/Decrement the iterator by the distance n.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ advance</a></span>: void (difference_type n);
</code>
</div></td></tr><tr id="advance_9251319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">If n &gt; 0 it is equivalent to executing ++i n times, and if n &lt; 0 it is equivalent to executing --i n times. If n == 0, the call has no effect.<br />
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Get the distance between this iterator and another one.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="distance_9261319844517_tmpl"><span class="keyword">template</span>&lt;class M , bool C&gt;</div>
 <span class="method"><a href="#">+ distance</a></span>: difference_type (const IIterator&lt;M, C&gt;&amp; rhs) <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="distance_9261319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Operators <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Dereferencing.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator*</a></span>: reference ();
</code>
</div></td></tr><tr id="operator*_9271319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Dereferencing (const)<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator*</a></span>: const_reference () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="operator*_9281319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Dereferencing.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator-&gt;</a></span>: pointer ();
</code>
</div></td></tr><tr id="operator_>_9291319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Dereferencing (const)<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator-&gt;</a></span>: const_pointer () <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="operator_>_9301319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Increment the operator by the distance 1.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator++</a></span>: IteratorType&amp; ();
</code>
</div></td></tr><tr id="operator++_9311319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Decrement the iterator by the distance 1.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator--</a></span>: IteratorType&amp; ();
</code>
</div></td></tr><tr id="operator___9321319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">(Post) Increment the iterator by the distance 1<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator++</a></span>: IteratorType (int );
</code>
</div></td></tr><tr id="operator++_9331319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">(Post) Decrement the iterator by the distance 1<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator--</a></span>: IteratorType (int );
</code>
</div></td></tr><tr id="operator___9341319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Increment the operator by the distance n.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator+=</a></span>: IteratorType&amp; (difference_type n);
</code>
</div></td></tr><tr id="operator+=_9351319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Decrement the operator by the distance n.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator-=</a></span>: IteratorType&amp; (difference_type n);
</code>
</div></td></tr><tr id="operator_=_9361319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Equality comparison.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="operator==_9371319844517_tmpl"><span class="keyword">template</span>&lt;class M , bool C&gt;</div>
 <span class="method"><a href="#">+ operator==</a></span>: bool (const IIterator&lt;M, C&gt;&amp; rhs) <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="operator==_9371319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Non-equality comparison.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="operator!=_9381319844517_tmpl"><span class="keyword">template</span>&lt;class M , bool C&gt;</div>
 <span class="method"><a href="#">+ operator!=</a></span>: bool (const IIterator&lt;M, C&gt;&amp; rhs) <span class="keyword">const</span>;
</code>
</div></td></tr><tr id="operator!=_9381319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Assignment.<br /><div class="doxygen_name_spacer"></div>
<code> <span class="method"><a href="#">+ operator=</a></span>: IteratorType&amp; (const IteratorType&amp; rhs);
</code>
</div></td></tr><tr id="operator=_9391319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief">Assignment.<br /><div class="doxygen_name_spacer"></div>
<code><div class="doxygen_tmpllist" id="operator=_9401319844517_tmpl"><span class="keyword">template</span>&lt;class M , bool C&gt;</div>
 <span class="method"><a href="#">+ operator=</a></span>: IteratorType&amp; (const IIterator&lt;M, C&gt;&amp; rhs);
</code>
</div></td></tr><tr id="operator=_9401319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxnone"></td><td class="doxnone"><h3 class="doxygen_section">Public <code class="doxygen_visibility">Public</code></h3>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><code><div class="doxygen_tmpllist" id="IIterator_9411319844517_tmpl"><span class="keyword">template</span>&lt;class ModelT , bool ConstT&gt;</div>
 <span class="method"><a href="#">+ IIterator</a></span>:  (const IIterator&lt;ModelT, ConstT&gt;&amp; rhs);
</code>
</div></td></tr><tr id="IIterator_9411319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
<tr><td class="doxygen_fun"></td><td class="doxnone"><div class="doxygen_brief"><code><div class="doxygen_tmpllist" id="operator=_9421319844517_tmpl"><span class="keyword">template</span>&lt;class ModelT , bool ConstT&gt;</div>
 <span class="method"><a href="#">+ operator=</a></span>: IIterator&lt;ModelT, ConstT&gt;&amp; (const IIterator&lt;ModelT, ConstT&gt;&amp; rhs);
</code>
</div></td></tr><tr id="operator=_9421319844517_desc"><td class="doxnone doxreturn"></td><td class="doxnone">
<div class="doxygen_name_spacer"></div>
<div class="doxygen_desc">
</div>
</td></tr>
</table>


