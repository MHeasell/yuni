#!/bin/sh

usage()
{
	echo "Yuni header auto-generator"
	echo ""
	echo "Usage: $0 [-q]"
	echo ""
	echo "  -q    Suppress output."
	echo "  -p    Path to PHP CLI binary."
	echo ""
	exit 1
}

args="`getopt qp: $*`"
errcode=$?
set -- $args
if [ $errcode -ne 0 ]; then
	# Unexpected options were found, abort
	usage
fi

QUIET=0

# Iterate through options, set appropriate variables
for opt
do
	case "$opt"
	in
		-q)
			QUIET=1
			shift;;
		-p)
			PHP_PATH="$2"
			shift;	
			shift;;

		--)
			shift; break;;
	esac
done

# If there's unexpected args following program options, abort.
if [ ! -z "$*" ]; then
	usage
fi

# Use a default php path
PHP_PATH="${PHP_PATH:-"`which php`"}"

# Check for PHP
if [ ! -x "${PHP_PATH}" ]; then
	echo "Could not use PHP interpreter."
	echo " -> `stat ${PHP_PATH} 2>&1 | sed -E 's/stat:? ?//g' `"
	echo "Please specify the path to PHP CLI binary via the -p option."
	exit 1
fi

# Assert it is really PHP
${PHP_PATH} --version | grep -q '^PHP 5'
if [ $? -ne 0 ]; then
	echo "Could not use PHP interpreter."
	echo "You must have at least PHP 5 to use this generator."
	exit 1
fi


if [ ${QUIET} -ne 1 ]; then
	vecho() { echo $* ; }
else
	vecho() { true; }
fi

# Find current directory
scriptpath="./$0"
scriptdir="`dirname ${scriptpath}`"

if [ ! -d "${scriptdir}" ]; then
	echo "Unable to determine current working directory. Aborting."
	exit 1
fi

vecho "Regenerating Yuni headers ... "
find "${scriptdir}/../yuni" -name '*.generator.hpp' -print -exec "${PHP_PATH}" -f '{}' ';'
exit $?
